// pnltri.js / raw.github.com/jahting/pnltri.js/master/LICENSE
'use strict';var PNLTRI={REVISION:"1.2"};PNLTRI.Math={log2:function(a){return Math.log(a)/Math.LN2},random:Math.random,array_shuffle:function(a){for(var c=a.length-1;0<c;c--){var b=Math.floor(PNLTRI.Math.random()*(c+1)),d=a[c];a[c]=a[b];a[b]=d}return a},ptsCrossProd:function(a,c,b){return(c.x-a.x)*(b.y-a.y)-(c.y-a.y)*(b.x-a.x)}};PNLTRI.Math.EPSILON_P=Math.pow(2,-43);PNLTRI.Math.EPSILON_N=-PNLTRI.Math.EPSILON_P;PNLTRI.PolygonData=function(a){this.vertices=[];this.segments=[];this.idNextPolyChain=0;this.PolyLeftArr=[];this.monoSubPolyChains=[];this.triangles=[];if(a)for(var c=0,b=a.length;c<b;c++)this.addPolygonChain(a[c])};
PNLTRI.PolygonData.prototype={constructor:PNLTRI.PolygonData,getSegments:function(){return this.segments},getFirstSegment:function(){return this.segments[0]},getMonoSubPolys:function(){return this.monoSubPolyChains},getTriangles:function(){return this.triangles.concat()},nbPolyChains:function(){return this.idNextPolyChain},get_PolyLeftArr:function(){return this.PolyLeftArr.concat()},set_PolyLeft_wrong:function(a){this.PolyLeftArr[a]=!1},compare_pts_yx:function(a,c){var b=a.y-c.y;if(b<PNLTRI.Math.EPSILON_N)return-1;
if(b>PNLTRI.Math.EPSILON_P)return 1;b=a.x-c.x;return b<PNLTRI.Math.EPSILON_N?-1:b>PNLTRI.Math.EPSILON_P?1:0},isClockWise:function(a){var c=a,b=0;do b+=(c.vFrom.x-c.vTo.x)*(c.vFrom.y+c.vTo.y),c=c.snext;while(c!=a);return 0>b},appendVertexEntry:function(a){a=a?a:{x:null,y:null,outSegs:[]};a.id=this.vertices.length;this.vertices.push(a);return a},createSegmentEntry:function(a,c){return{chainId:this.idNextPolyChain,vFrom:a,vTo:c,upward:1==this.compare_pts_yx(c,a),sprev:null,snext:null}},appendSegmentEntry:function(a){this.segments.push(a);
0==this.monoSubPolyChains.length&&(this.monoSubPolyChains=[this.segments[0]]);return a},addVertexChain:function(a){function c(a,b){return Math.abs(a.x-b.x)<PNLTRI.Math.EPSILON_P&&Math.abs(a.y-b.y)<PNLTRI.Math.EPSILON_P}for(var b=[],d,e,f,k=0;k<a.length;k++)d=this.appendVertexEntry({x:a[k].x,y:a[k].y}),e=!0,f=b.length-1,0<=f&&c(d,b[f])&&(e=!1),e&&b.push(d);1<b.length&&c(b[b.length-1],b[0])&&b.pop();return b},addPolygonChain:function(a){a=this.addVertexChain(a);if(3>a.length)return console.log("Polygon has < 3 vertices!",
a),0;for(var c=this.segments.length,b,d,e,f=0;f<a.length-1;f++)b=this.createSegmentEntry(a[f],a[f+1]),e?(b.sprev=e,e.snext=b):d=b,e=b,this.appendSegmentEntry(b);b=this.createSegmentEntry(a[a.length-1],a[0]);b.sprev=e;e.snext=b;this.appendSegmentEntry(b);d.sprev=b;b.snext=d;this.PolyLeftArr[this.idNextPolyChain++]=!0;return this.segments.length-c},reverse_polygon_chain:function(a){this.set_PolyLeft_wrong(a.chainId);var c,b=a;do c=b.snext,b.snext=b.sprev,b.sprev=c,c=b.vTo,b.vTo=b.vFrom,b.vFrom=c,b.upward=
!b.upward,b=b.sprev;while(b!=a)},initMonoChains:function(){for(var a=0;a<this.segments.length;a++)this.segments[a].marked=!1,this.segments[a].mprev=this.segments[a].sprev,this.segments[a].mnext=this.segments[a].snext,this.segments[a].vFrom.outSegs=[{segOut:this.segments[a],vertTo:this.segments[a].vTo}]},appendVertexOutsegEntry:function(a,c){var b=c?c:{segOut:null,vertTo:null};a.outSegs.push(b);return b},splitPolygonChain:function(a,c,b,d){function e(a,b){for(var c,d,e=null,f=4,k=0;k<a.outSegs.length;k++){c=
a.outSegs[k];var h=c.vertTo;d=h.x-a.x;var h=h.y-a.y,t=b.x-a.x,n=b.y-a.y,v=(d*t+h*n)/Math.sqrt(d*d+h*h)/Math.sqrt(t*t+n*n);(d=0<=d*n-t*h?1-v:3+v)<f&&(f=d,e=c)}return e}var f,k;f=e(c,b);k=e(b,c);f=f.segOut;var h=k.segOut;k=this.appendSegmentEntry({vFrom:c,vTo:b,upward:!0,mprev:f.mprev,mnext:h});var n=this.appendSegmentEntry({vFrom:b,vTo:c,upward:!1,mprev:h.mprev,mnext:f});this.appendVertexOutsegEntry(c,{segOut:k,vertTo:b});this.appendVertexOutsegEntry(b,{segOut:n,vertTo:c});f.mprev.mnext=k;h.mprev.mnext=
n;f.mprev=n;h.mprev=k;c=this.monoSubPolyChains.length;d?(this.monoSubPolyChains[a]=k,this.monoSubPolyChains[c]=n):(this.monoSubPolyChains[a]=n,this.monoSubPolyChains[c]=k);return c},unique_monotone_chains_max:function(){var a,c,b,d,e,f;for(f=0;f<this.segments.length;f++)this.segments[f].marked=!1;var k=[];for(f=0;f<this.monoSubPolyChains.length;f++){a=c=this.monoSubPolyChains[f];d=e=a.vFrom;a.marked=!0;a=a.mnext;for(var h=!1;(b=a.vFrom)!=d;){if(a.marked){h=!0;break}else a.marked=!0;1==this.compare_pts_yx(b,
e)&&(e=b,c=a);a=a.mnext}h||k.push(c)}return k},normalize_monotone_chains:function(){this.monoSubPolyChains=this.unique_monotone_chains_max();return this.monoSubPolyChains.length},clearTriangles:function(){this.triangles=[]},addTriangle:function(a,c,b){this.triangles.push([a.id,c.id,b.id])}};PNLTRI.EarClipTriangulator=function(a){this.polyData=a};
PNLTRI.EarClipTriangulator.prototype={constructor:PNLTRI.EarClipTriangulator,triangulate_polygon_no_holes:function(){var a=this.polyData,c=a.getFirstSegment(),b=c;if(a.isClockWise(c)){do b.mprev=b.snext,b=b.mnext=b.sprev;while(b!=c);a.set_PolyLeft_wrong(0)}else{do b.mprev=b.sprev,b=b.mnext=b.snext;while(b!=c)}for(c=a=c;a.mnext!=a.mprev;){a:{var b=a.mprev.vFrom.x,d=a.mprev.vFrom.y,e=a.vFrom.x,f=a.vFrom.y,k=a.mnext.vFrom.x,h=a.mnext.vFrom.y,n=k-e,p=h-f,q=b-k,u=d-h,g=e-b,m=f-d;if(PNLTRI.Math.EPSILON_P>
g*p-n*m)b=!1;else{for(var l=a.mprev.mprev,s=a.mnext;s!=l;){var s=s.mnext,r=s.vFrom.x,t=s.vFrom.y,w=r-b,v=t-d;if(0!=w||0!=v){var x=r-e,y=t-f;if(0!=x||0!=y)if(r-=k,t-=h,(0!=r||0!=t)&&n*y-p*x>=PNLTRI.Math.EPSILON_N&&g*v-m*w>=PNLTRI.Math.EPSILON_N&&q*t-u*r>=PNLTRI.Math.EPSILON_N){b=!1;break a}}}b=!0}}if(b)this.polyData.addTriangle(a.mprev.vFrom,a.vFrom,a.mnext.vFrom),a.mprev.mnext=a.mnext,a.mnext.mprev=a.mprev,c=a=a.mnext;else if(a=a.mnext,a==c)return!1}return!0}};PNLTRI.Trapezoid=function(a,c,b,d){this.vHigh=a?a:{x:Number.POSITIVE_INFINITY,y:Number.POSITIVE_INFINITY};this.vLow=c?c:{x:Number.NEGATIVE_INFINITY,y:Number.NEGATIVE_INFINITY};this.lseg=b;this.rseg=d;this.depth=-1;this.monoDiag=null};
PNLTRI.Trapezoid.prototype={constructor:PNLTRI.Trapezoid,clone:function(){var a=new PNLTRI.Trapezoid(this.vHigh,this.vLow,this.lseg,this.rseg);a.uL=this.uL;a.uR=this.uR;a.dL=this.dL;a.dR=this.dR;a.sink=this.sink;return a},splitOffLower:function(a){var c=this.clone();this.vLow=c.vHigh=a;this.dL=c;c.uL=this;this.dR=c.uR=null;c.dL&&(c.dL.uL=c);c.dR&&(c.dR.uR=c);return c}};PNLTRI.QsNode=function(a){this.trap=a;a.sink=this};PNLTRI.QsNode.prototype={constructor:PNLTRI.QsNode};
PNLTRI.QueryStructure=function(a){var c=new PNLTRI.Trapezoid(null,null,null,null);this.trapArray=[];this.appendTrapEntry(c);this.root=new PNLTRI.QsNode(c);if(a){for(var c=a.getSegments(),b=0;b<c.length;b++)c[b].rootFrom=c[b].rootTo=this.root,c[b].is_inserted=!1;this.compare_pts_yx=a.compare_pts_yx}else this.compare_pts_yx=PNLTRI.PolygonData.prototype.compare_pts_yx};
PNLTRI.QueryStructure.prototype={constructor:PNLTRI.QueryStructure,getRoot:function(){return this.root},appendTrapEntry:function(a){a.trapID=this.trapArray.length;this.trapArray.push(a)},cloneTrap:function(a){a=a.clone();this.appendTrapEntry(a);return a},splitNodeAtPoint:function(a,c,b){var d=a.trap;if(d.vHigh==c||d.vLow==c)return a;var e=d.splitOffLower(c);this.appendTrapEntry(e);a.yval=c;a.trap=null;a.right=new PNLTRI.QsNode(d);a.left=new PNLTRI.QsNode(e);return b?d.sink:e.sink},fpEqual:function(a,
c){return Math.abs(a-c)<PNLTRI.Math.EPSILON_P},is_left_of:function(a,c,b){b=a.vFrom.x-c.x;var d=a.vTo.x-c.x;if(Math.abs(a.vTo.y-c.y)<PNLTRI.Math.EPSILON_P)a=d,c=b;else if(Math.abs(a.vFrom.y-c.y)<PNLTRI.Math.EPSILON_P)a=b,c=d;else return a.upward?PNLTRI.Math.ptsCrossProd(a.vFrom,a.vTo,c):PNLTRI.Math.ptsCrossProd(a.vTo,a.vFrom,c);return Math.abs(a)<PNLTRI.Math.EPSILON_P?Math.abs(c)<PNLTRI.Math.EPSILON_P?0:c:a},ptNode:function(a,c,b){for(var d;b;)if(b.yval)d=a==b.yval?c:a,d=this.compare_pts_yx(d,b.yval),
b=-1==d?b.left:b.right;else if(b.seg)a==b.seg.vFrom||a==b.seg.vTo?this.fpEqual(a.y,c.y)?b=c.x<a.x?b.left:b.right:(d=this.is_left_of(b.seg,c,!1),b=0<d?b.left:0>d?b.right:a==b.seg.vFrom?b.right:b.left):(d=a,d=this.is_left_of(b.seg,d,!0),b=0<d?b.left:b.right);else return b.trap||console.log("ptNode: unknown type",b),b},add_segment:function(a){function c(){var a=g.uL||g.uR;a.dL&&a.dR?g==a.dL?(l.uL=null,a.dL=m):(m.uR=null,a.dR=l):(l.uL=null,l.uR=a,a.dR=l)}function b(a){g.vLow==u.vLow?(q?g.dL?(a.uL=m,m.dL=
a,l.dR=null):(a.uR=l,m.dL=null,l.dR=a):(a.uL=m,a.uR=l,m.dL=l.dR=a),m.dR=l.dL=null):(a.uL&&a.uR&&(a.uL==g?(a.usave=a.uR,a.uleft=!0):(a.usave=a.uL,a.uleft=!1)),a.uL=m,a.uR=l,m.dR=l.dL=a,m.dL=l.dR=null)}function d(){var b;g.vLow==u.vLow&&q?(g.dL.uL=m,g.dR.uR=l,m.dL=g.dL,l.dR=g.dR,b=m.dR=l.dL=null):(g.dL.uL=m,g.dR.uR=l,0<e.is_left_of(a,g.vLow,!0)?(b=g.dR,g.dR.uL=m,m.dL=g.dL,l.dR=null):(b=g.dL,g.dL.uR=l,l.dR=g.dR,m.dL=null),m.dR=l.dL=b);return b}var e=this,f,k,h,n,p,q;a.upward?(n=a.vFrom,f=a.vTo,p=a.rootFrom,
k=a.rootTo,q=a.sprev.is_inserted,h=a.snext.is_inserted):(n=a.vTo,f=a.vFrom,p=a.rootTo,k=a.rootFrom,q=a.snext.is_inserted,h=a.sprev.is_inserted);k=this.ptNode(f,n,k);h||(k=this.splitNodeAtPoint(k,f,!1));h=k.trap;if(h.uL||h.uR){k=this.ptNode(n,f,p);q||(k=this.splitNodeAtPoint(k,n,!0));var u=k.trap,g=h,m,l,s,r;for(f=this.trapArray.length+2;g;){if(0>--f){console.log("ERR add_segment: infinite loop",g,a,this);return}if(!g.dL&&!g.dR){console.log("ERR add_segment: missing successors",g,a,this);return}n=
g.sink;n.seg=a;n.trap=null;r&&r.rseg==g.rseg?(m=g,l=r,l.vLow=g.vLow,n.left=new PNLTRI.QsNode(m),n.right=r.sink):(s&&s.lseg==g.lseg?(l=g,m=s,m.vLow=g.vLow,n.left=s.sink):(m=g,l=this.cloneTrap(g),n.left=new PNLTRI.QsNode(m)),n.right=new PNLTRI.QsNode(l));g.uL&&g.uR?g.usave?(g.uleft?(l.uL=g.uR,l.uR=g.usave,l.uL.dL=l,l.uR.dR=l):(m.uR=g.uL,m.uL=g.usave,m.uL.dL=m,m.uR.dR=m),m.usave=l.usave=null):g.vHigh==h.vHigh?(l.uR.dR=l,m.uR=l.uL=null):l==g?(l.uL=l.uR,l.uR=null,l.uL.dL=l):(m.uR=m.uL,m.uL=null):c();g.dL&&
g.dR?n=d():(n=g.dL?g.dL:g.dR,b(n));m.rseg&&(m.rseg.trLeft=l);l.lseg&&(l.lseg.trRight=m);m.rseg=l.lseg=a;a.trLeft=m;a.trRight=l;g.vLow!=u.vLow?(s=m,r=l,g=n):g=null}a.is_inserted=!0}else console.log("ERR add_segment: missing trFirst.uX: ",h)},assignDepths:function(a){var c=[this.trapArray[0]],b=[],d,e,f=0;do{for(var k=1==f%2;d=c.pop();)-1==d.depth&&(d.depth=f,d.uL&&c.push(d.uL),d.uR&&c.push(d.uR),d.dL&&c.push(d.dL),d.dR&&c.push(d.dR),(e=d.lseg)&&-1==e.trLeft.depth&&b.push(e.trLeft),(e=d.rseg)&&-1==
e.trRight.depth&&(b.push(e.trRight),e.upward!=k&&a&&a.reverse_polygon_chain(e)));c=b;b=[];f++}while(0<c.length)},find_first_inside:function(){for(var a,c=0,b=this.trapArray.length;c<b;c++)if(a=this.trapArray[c],1==a.depth%2&&!a.monoDiag&&(!a.uL&&!a.uR||!a.dL&&!a.dR)&&a.lseg)return a;return null}};PNLTRI.Trapezoider=function(a){this.polyData=a;this.queryStructure=new PNLTRI.QueryStructure(this.polyData)};
PNLTRI.Trapezoider.prototype={constructor:PNLTRI.Trapezoider,find_first_inside:function(){return this.queryStructure.find_first_inside()},math_logstar_n:function(a){var c;for(c=0;1<=a;c++)a=PNLTRI.Math.log2(a);return c-1},math_NH:function(a,c){var b,d;b=0;for(d=a;b<c;b++)d=PNLTRI.Math.log2(d);return Math.ceil(1*a/d)-1},optimise_randomlist:function(a){var c=0,b=this.polyData.nbPolyChains();if(1!=b)for(var d=Array(b),e=a.concat(),f=0;f<e.length;f++){var k=e[f].chainId;d[k]?a[b++]=e[f]:(a[c++]=e[f],
d[k]=!0)}},trapezoide_polygon:function(){var a=this.polyData.getSegments().concat();PNLTRI.Math.array_shuffle(a);this.optimise_randomlist(a);var c=a.length,b=this.queryStructure,d,e,f,k=this.math_logstar_n(c);for(f=1;f<=k;f++){e=this.math_NH(c,f);for(d=this.math_NH(c,f-1);d<e;d++)b.add_segment(a[d]);for(d=e;d<c;d++)e=a[d],e.rootFrom=this.queryStructure.ptNode(e.vFrom,e.vTo,e.rootFrom),e.rootTo=this.queryStructure.ptNode(e.vTo,e.vFrom,e.rootTo)}for(d=this.math_NH(c,k);d<c;d++)b.add_segment(a[d]);b.assignDepths(this.polyData)}};PNLTRI.MonoSplitter=function(a){this.polyData=a;this.startTrap=this.trapezoider=null};
PNLTRI.MonoSplitter.prototype={constructor:PNLTRI.MonoSplitter,monotonate_trapezoids:function(){this.trapezoider=new PNLTRI.Trapezoider(this.polyData);this.trapezoider.trapezoide_polygon();this.startTrap=this.trapezoider.find_first_inside();this.polyData.initMonoChains();for(var a=0,c=this.startTrap;c;)if(this.polyData.monoSubPolyChains[a]=c.lseg,this.alyTrap(a,c,null,null,null),c=this.trapezoider.find_first_inside())a=this.polyData.monoSubPolyChains.length;return this.polyData.normalize_monotone_chains()},
doSplit:function(a,c,b,d){return this.polyData.splitPolygonChain(a,c,b,d)},alyTrap:function(a,c,b,d,e){function f(){var a;return(a=k.pop())?(h=a[0],n=a[1],p=a[2],q=a[3],!0):!1}var k=[],h,n,p,q,u;null==b&&(d=!0,c.uL?b=!0:c.dL?b=!1:(d=!1,b=c.uR?!0:!1));for(c&&k.push([c,b,d,a]);f();)if(!h.monoDiag){h.monoDiag=!0;if(!h.lseg||!h.rseg)return console.log("ERR alyTrap: lseg/rseg missing",h),k;n?p?(a=h.uL,c=h.uR,b=h.dL,d=h.dR):(a=h.uR,c=h.uL,b=h.dR,d=h.dL):p?(a=h.dL,c=h.dR,b=h.uL,d=h.uR):(a=h.dR,c=h.dL,b=
h.uR,d=h.uL);if(c||d)u=this.doSplit(q,h.vLow,h.vHigh,p);d&&k.push([d,n,!p,u]);c&&k.push([c,!n,!p,u]);b&&k.push([b,n,p,q]);b||d||a&&k.push([a,!n,p,q]);if(e)return k}return[]}};PNLTRI.MonoTriangulator=function(a){this.polyData=a};
PNLTRI.MonoTriangulator.prototype={constructor:PNLTRI.MonoTriangulator,triangulate_all_polygons:function(){var a=this.polyData.getMonoSubPolys();this.polyData.clearTriangles();for(var c=0;c<a.length;c++){var b=a[c],d=b.mprev,e=b.mnext;e.mnext==d?this.polyData.addTriangle(b.vFrom,e.vFrom,d.vFrom):this.triangulate_monotone_polygon(b)}},triangulate_monotone_polygon:function(a){var c=a.mnext;a=a.vFrom;var b=[c.vFrom],d=0,c=c.mnext,e=c.vFrom;if(e!=a){for(;e!=a||1<d;)if(0<d)if(0<PNLTRI.Math.ptsCrossProd(e,
b[d-1],b[d]))this.polyData.addTriangle(b[d-1],b[d],e),d--;else if(b[++d]=e,e==a)for(console.log("ERR uni-y-monotone: only concave angles left",b);1<d;)d--,this.polyData.addTriangle(b[d-1],b[d],b[d+1]);else c=c.mnext,e=c.vFrom;else b[++d]=e,c=c.mnext,e=c.vFrom;this.polyData.addTriangle(b[d-1],b[d],e)}}};PNLTRI.Triangulator=function(){this.lastPolyData=null};
PNLTRI.Triangulator.prototype={constructor:PNLTRI.Triangulator,clear_lastData:function(){this.lastPolyData=null},get_PolyLeftArr:function(){return this.lastPolyData?this.lastPolyData.get_PolyLeftArr():null},triangulate_polygon:function(a,c){if(!a||0==a.length)return[];var b=new PNLTRI.PolygonData(a),d;d=c?!1:1==b.nbPolyChains();d&&(d=new PNLTRI.EarClipTriangulator(b),d=d.triangulate_polygon_no_holes());d||((new PNLTRI.MonoSplitter(b)).monotonate_trapezoids(),d=new PNLTRI.MonoTriangulator(b),d.triangulate_all_polygons());
this.lastPolyData=b;return b.getTriangles()}};
