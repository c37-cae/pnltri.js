// pnltri.js / raw.github.com/jahting/pnltri.js/master/LICENSE
'use strict';var PNLTRI={REVISION:"0.9"};PNLTRI.Math={log2:function(a){return Math.log(a)/Math.LN2},random:Math.random,array_shuffle:function(a){for(var b=a.length-1;0<b;b--){var c=Math.floor(PNLTRI.Math.random()*(b+1)),d=a[b];a[b]=a[c];a[c]=d}return a},ptsCrossProd:function(a,b,c){return(b.x-a.x)*(c.y-a.y)-(b.y-a.y)*(c.x-a.x)}};PNLTRI.Math.EPSILON_P=Math.pow(2,-43);PNLTRI.Math.EPSILON_N=-PNLTRI.Math.EPSILON_P;PNLTRI.PolygonData=function(a){this.vertices=[];this.segments=[];this.idNextPolyChain=0;this.monoSubPolyChains=[];this.triangles=[];if(a)for(var b=0,c=a.length;b<c;b++)this.addPolygonChain(a[b])};
PNLTRI.PolygonData.prototype={constructor:PNLTRI.PolygonData,getSegments:function(){return this.segments},getMonoSubPolys:function(){return this.monoSubPolyChains},getTriangles:function(){return this.triangles.concat()},nbPolyChains:function(){return this.idNextPolyChain},compare_pts_yx:function(a,b){var c=a.y-b.y;if(c>PNLTRI.Math.EPSILON_P)return 1;if(c<PNLTRI.Math.EPSILON_N)return-1;c=a.x-b.x;return c>PNLTRI.Math.EPSILON_P?1:c<PNLTRI.Math.EPSILON_N?-1:0},appendVertexEntry:function(a){a=a?a:{x:null,
y:null,outSegs:[]};a.id=this.vertices.length;this.vertices.push(a);return a},createSegmentEntry:function(a,b){return{chainId:this.idNextPolyChain,vFrom:a,vTo:b,upward:1==this.compare_pts_yx(b,a),sprev:null,snext:null}},appendSegmentEntry:function(a){this.segments.push(a);0==this.monoSubPolyChains.length&&(this.monoSubPolyChains=[this.segments[0]]);return a},addVertexChain:function(a){function b(a,b){return Math.abs(a.x-b.x)<PNLTRI.Math.EPSILON_P&&Math.abs(a.y-b.y)<PNLTRI.Math.EPSILON_P}for(var c=
[],d,e,l,g=0;g<a.length;g++)d=this.appendVertexEntry({x:a[g].x,y:a[g].y}),e=!0,l=c.length-1,0<=l&&b(d,c[l])&&(e=!1),e&&c.push(d);1<c.length&&b(c[c.length-1],c[0])&&c.pop();return c},addPolygonChain:function(a){a=this.addVertexChain(a);if(3>a.length)return console.log("Polygon has < 3 vertices!",a),0;for(var b=this.segments.length,c,d,e,l=0;l<a.length-1;l++)c=this.createSegmentEntry(a[l],a[l+1]),e?(c.sprev=e,e.snext=c):d=c,e=c,this.appendSegmentEntry(c);c=this.createSegmentEntry(a[a.length-1],a[0]);
c.sprev=e;e.snext=c;this.appendSegmentEntry(c);d.sprev=c;c.snext=d;this.idNextPolyChain++;return this.segments.length-b},initMonoChains:function(){for(var a=0;a<this.segments.length;a++)this.segments[a].marked=!1,this.segments[a].mprev=this.segments[a].sprev,this.segments[a].mnext=this.segments[a].snext,this.segments[a].vFrom.outSegs=[{segOut:this.segments[a],vertTo:this.segments[a].vTo}]},appendVertexOutsegEntry:function(a,b){var c=b?b:{segOut:null,vertTo:null};a.outSegs.push(c);return c},splitPolygonChain:function(a,
b,c){function d(a,b){for(var c,d,f=null,e=4,h=0;h<a.outSegs.length;h++){c=a.outSegs[h];var g=c.vertTo;d=g.x-a.x;var g=g.y-a.y,k=b.x-a.x,u=b.y-a.y,l=(d*k+g*u)/Math.sqrt(d*d+g*g)/Math.sqrt(k*k+u*u);(d=0<=d*u-k*g?1-l:3+l)<e&&(e=d,f=c)}return f}var e=d(b,c),l=d(c,b),e=e.segOut,l=l.segOut,g=1==this.compare_pts_yx(b,c),k=this.appendSegmentEntry({vFrom:b,vTo:c,upward:!g,mprev:e.mprev,mnext:l}),g=this.appendSegmentEntry({vFrom:c,vTo:b,upward:g,mprev:l.mprev,mnext:e});e.mprev.mnext=k;l.mprev.mnext=g;e.mprev=
g;l.mprev=k;this.appendVertexOutsegEntry(b,{segOut:k,vertTo:c});this.appendVertexOutsegEntry(c,{segOut:g,vertTo:b});this.monoSubPolyChains[a]=l;this.monoSubPolyChains.push(e);return this.monoSubPolyChains.length-1},unique_monotone_chains_max:function(){var a,b,c,d,e,l;for(l=0;l<this.segments.length;l++)this.segments[l].marked=!1;var g=[];for(l=0;l<this.monoSubPolyChains.length;l++){a=b=this.monoSubPolyChains[l];d=e=a.vFrom;a.marked=!0;a=a.mnext;for(var k=!1;(c=a.vFrom)!=d;){if(a.marked){k=!0;break}else a.marked=
!0;1==this.compare_pts_yx(c,e)&&(e=c,b=a);a=a.mnext}k||g.push(b)}return g},normalize_monotone_chains:function(){this.monoSubPolyChains=this.unique_monotone_chains_max();return this.monoSubPolyChains.length},clearTriangles:function(){this.triangles=[]},addTriangle:function(a,b,c){this.triangles.push([a.id,b.id,c.id])}};PNLTRI.trapCnt=0;PNLTRI.Trapezoid=function(a,b,c,d){this.trapID=PNLTRI.trapCnt++;this.vHigh=a?a:{x:Number.POSITIVE_INFINITY,y:Number.POSITIVE_INFINITY};this.vLow=b?b:{x:Number.NEGATIVE_INFINITY,y:Number.NEGATIVE_INFINITY};this.lseg=c;this.rseg=d;this.depth=-1;this.monoDiag=null};
PNLTRI.Trapezoid.prototype={constructor:PNLTRI.Trapezoid,clone:function(){var a=new PNLTRI.Trapezoid(this.vHigh,this.vLow,this.lseg,this.rseg);a.uL=this.uL;a.uR=this.uR;a.dL=this.dL;a.dR=this.dR;a.sink=this.sink;return a},setAbove:function(a,b){this.uL=a;this.uR=b},setBelow:function(a,b){this.dL=a;this.dR=b},splitOffLower:function(a){var b=this.clone();this.vLow=b.vHigh=a;this.setBelow(b,null);b.setAbove(this,null);b.dL&&(b.dL.uL=b);b.dR&&(b.dR.uR=b);return b}};PNLTRI.T_Y=1;PNLTRI.T_X=2;
PNLTRI.T_SINK=3;PNLTRI.S_LEFT=1;PNLTRI.S_RIGHT=2;PNLTRI.QsNode=function(a){this.nodetype=PNLTRI.T_SINK;this.trap=a;a.sink=this};PNLTRI.QsNode.prototype={constructor:PNLTRI.QsNode};
PNLTRI.QueryStructure=function(a){PNLTRI.trapCnt=0;var b=new PNLTRI.Trapezoid(null,null,null,null);this.root=new PNLTRI.QsNode(b);this.trapArray=[b];this.segListArray=null;if(a){this.segListArray=a.getSegments();for(b=0;b<this.segListArray.length;b++)this.segListArray[b].rootFrom=this.segListArray[b].rootTo=this.root,this.segListArray[b].is_inserted=!1;this.compare_pts_yx=a.compare_pts_yx}else this.compare_pts_yx=PNLTRI.PolygonData.prototype.compare_pts_yx};
PNLTRI.QueryStructure.prototype={constructor:PNLTRI.QueryStructure,getRoot:function(){return this.root},getSegListArray:function(){return this.segListArray},cloneTrap:function(a){a=a.clone();this.trapArray.push(a);return a},splitNodeAtPoint:function(a,b,c){var d=a.trap;if(d.vHigh==b||d.vLow==b)return a;var e=d.splitOffLower(b);this.trapArray.push(e);a.nodetype=PNLTRI.T_Y;a.yval=b;a.trap=null;a.right=new PNLTRI.QsNode(d);a.left=new PNLTRI.QsNode(e);return c?d.sink:e.sink},fpEqual:function(a,b){return Math.abs(a-
b)<PNLTRI.Math.EPSILON_P},is_left_of:function(a,b,c){c=a.vFrom.x-b.x;var d=a.vTo.x-b.x;if(Math.abs(a.vTo.y-b.y)<PNLTRI.Math.EPSILON_P)a=d,b=c;else if(Math.abs(a.vFrom.y-b.y)<PNLTRI.Math.EPSILON_P)a=c,b=d;else return a.upward?PNLTRI.Math.ptsCrossProd(a.vFrom,a.vTo,b):PNLTRI.Math.ptsCrossProd(a.vTo,a.vFrom,b);return Math.abs(a)<PNLTRI.Math.EPSILON_P?Math.abs(b)<PNLTRI.Math.EPSILON_P?0:b:a},ptNode:function(a,b,c){var d,e=!0;switch(c.nodetype){case PNLTRI.T_SINK:return c;case PNLTRI.T_Y:d=a;d==c.yval&&
(d=b);d=this.compare_pts_yx(d,c.yval);-1==d&&(e=!1);break;case PNLTRI.T_X:if(a==c.seg.vFrom||a==c.seg.vTo){if(this.fpEqual(a.y,b.y)){b.x<a.x&&(e=!1);break}else d=this.is_left_of(c.seg,b,!1),0<d?e=!1:0==d&&(e=a==c.seg.vFrom?!0:!1);break}else d=this.is_left_of(c.seg,a,!0),0<d?e=!1:0==d&&(e=!0);break;default:console.log("ptNode: undef. NodeType: ",c.nodetype)}return e?this.ptNode(a,b,c.right):this.ptNode(a,b,c.left)},add_segment:function(a){function b(){var a=f.uL||f.uR;a.dL&&a.dR?f==a.dR?(m.setAbove(null,
null),h.setAbove(null,a),a.setBelow(a.dL,h)):(h.setAbove(null,null),m.setAbove(a,null),a.setBelow(m,a.dR)):(m.setAbove(a,null),h.setAbove(null,a),a.setBelow(m,h))}function c(a){f.vLow==r.vLow&&q?f.dL?(m.setBelow(a,null),h.setBelow(null,null),a.setAbove(m,a.uR)):(h.setBelow(null,a),m.setBelow(null,null),a.setAbove(a.uL,h)):(a.uL&&a.uR?a.uL==f?(a.usave=a.uR,a.uside=PNLTRI.S_LEFT,m.setBelow(a,null),h.setBelow(a,null)):(a.usave=a.uL,a.uside=PNLTRI.S_RIGHT,m.setBelow(null,a),h.setBelow(null,a)):f.vLow==
r.vLow?(m.setBelow(a,null),h.setBelow(null,a)):(m.setBelow(null,a),h.setBelow(a,null)),a.setAbove(m,h))}function d(){var b;f.vLow==r.vLow&&q?(f.dL.setAbove(m,null),f.dR.setAbove(null,h),b=f.dR,m.setBelow(f.dL,null),h.setBelow(null,b),b=null):0<e.is_left_of(a,f.vLow,!0)?(b=f.dR,f.dL.setAbove(m,null),f.dR.setAbove(m,h),m.setBelow(f.dL,f.dR),h.setBelow(null,f.dR)):(b=f.dL,f.dL.setAbove(m,h),f.dR.setAbove(null,h),h.setBelow(f.dL,f.dR),m.setBelow(f.dL,null));return b}var e=this,l,g,k,n,p,q;a.upward?(n=
a.vFrom,l=a.vTo,p=a.rootFrom,g=a.rootTo,q=a.sprev.is_inserted,k=a.snext.is_inserted):(n=a.vTo,l=a.vFrom,p=a.rootTo,g=a.rootFrom,q=a.snext.is_inserted,k=a.sprev.is_inserted);g=this.ptNode(l,n,g);k||(g=this.splitNodeAtPoint(g,l,!1));k=g.trap;if(k.uL||k.uR){g=this.ptNode(n,l,p);q||(g=this.splitNodeAtPoint(g,n,!0));var r=g.trap,f=k,m,h,s,t;for(l=this.trapArray.length+2;f;){if(0>--l){console.log("ERR add_segment: infinite loop",f,a,this);return}if(!f.dL&&!f.dR){console.log("ERR add_segment: missing successors",
f,a,this);return}g=f.sink;g.nodetype=PNLTRI.T_X;g.seg=a;g.trap=null;n=p=!0;t&&t.rseg==f.rseg?(p=!1,m=f,h=t,h.vLow=f.vLow,g.right=t.sink,g.left=new PNLTRI.QsNode(m)):s&&s.lseg==f.lseg?(n=!1,h=f,m=s,m.vLow=f.vLow,g.left=s.sink,g.right=new PNLTRI.QsNode(h)):(m=f,h=this.cloneTrap(f),g.right=new PNLTRI.QsNode(h),g.left=new PNLTRI.QsNode(m));f.uL&&f.uR?f.usave?(f.uside==PNLTRI.S_LEFT?(h.setAbove(f.uR,f.usave),h.uL.setBelow(h,null),h.uR.setBelow(null,h)):(m.setAbove(f.usave,f.uL),m.uL.setBelow(m,null),m.uR.setBelow(null,
m)),m.usave=h.usave=null):f.vHigh==k.vHigh?(h.setAbove(null,f.uR),h.uR.setBelow(null,h),m.setAbove(f.uL,null)):(p&&(h.setAbove(f.uR,null),h.uL.setBelow(h,h.uL.dR)),n&&m.setAbove(null,f.uL)):b();f.dL&&f.dR?n=d():(n=f.dL?f.dL:f.dR,c(n));m.rseg&&(m.rseg.trLeft=h);h.lseg&&(h.lseg.trRight=m);m.rseg=h.lseg=a;a.trLeft=m;a.trRight=h;f.vLow!=r.vLow?(s=m,t=h,f=n):f=null}a.is_inserted=!0}else console.log("ERR add_segment: missing trFirst.uX: ",k)},assignDepths:function(){var a=[this.trapArray[0]],b=[],c,d,e=
0;do{for(;c=a.pop();)-1==c.depth&&(c.depth=e,c.uL&&a.push(c.uL),c.uR&&a.push(c.uR),c.dL&&a.push(c.dL),c.dR&&a.push(c.dR),(d=c.lseg)&&-1==d.trLeft.depth&&b.push(d.trLeft),(d=c.rseg)&&-1==d.trRight.depth&&b.push(d.trRight));a=b;b=[];e++}while(0<a.length)},reverse_polygon_chain:function(a){var b,c=a;do b=c.snext,c.snext=c.sprev,c.sprev=b,b=c.vTo,c.vTo=c.vFrom,c.vFrom=b,c.upward=!c.upward,c=c.sprev;while(c!=a)},normalize_segment_orientation:function(){for(var a,b=0;b<this.segListArray.length;b++)a=this.segListArray[b],
a.upward==(0==a.trLeft.depth%2)&&this.reverse_polygon_chain(a)},find_first_inside:function(){for(var a,b=0,c=this.trapArray.length;b<c;b++)if(a=this.trapArray[b],1==a.depth%2&&!a.monoDiag&&(!a.uL&&!a.uR||!a.dL&&!a.dR))return a;return null}};PNLTRI.Trapezoider=function(a){this.polyData=a;this.queryStructure=new PNLTRI.QueryStructure(this.polyData)};
PNLTRI.Trapezoider.prototype={constructor:PNLTRI.Trapezoider,find_first_inside:function(){return this.queryStructure.find_first_inside()},math_logstar_n:function(a){var b;for(b=0;1<=a;b++)a=PNLTRI.Math.log2(a);return b-1},math_NH:function(a,b){var c,d;c=0;for(d=a;c<b;c++)d=PNLTRI.Math.log2(d);return Math.ceil(1*a/d)},find_new_roots:function(a){a.is_inserted||(a.rootFrom=this.queryStructure.ptNode(a.vFrom,a.vTo,a.rootFrom),a.rootTo=this.queryStructure.ptNode(a.vTo,a.vFrom,a.rootTo))},trapezoide_polygon:function(){var a=
this.queryStructure,b=a.segListArray.slice(0);PNLTRI.Math.array_shuffle(b);var c,d,e=b.length,l=this.math_logstar_n(e);for(d=1;d<=l;d++){for(c=this.math_NH(e,d-1);c<this.math_NH(e,d);c++)a.add_segment(b[c-1]);for(c=0;c<e;c++)this.find_new_roots(b[c])}for(c=this.math_NH(e,l);c<=e;c++)a.add_segment(b[c-1]);a.assignDepths();a.normalize_segment_orientation()}};PNLTRI.MonoSplitter=function(a){this.polyData=a;this.startTrap=this.trapezoider=null};
PNLTRI.MonoSplitter.prototype={constructor:PNLTRI.MonoSplitter,monotonate_trapezoids:function(){this.trapezoider=new PNLTRI.Trapezoider(this.polyData);this.trapezoider.trapezoide_polygon();this.startTrap=this.trapezoider.find_first_inside();this.polyData.initMonoChains();for(var a=0,b=this.startTrap;b;)if(this.polyData.monoSubPolyChains[a]=b.lseg,this.alyTrap(a,b,null,null,null),b=this.trapezoider.find_first_inside())a=this.polyData.monoSubPolyChains.length;return this.polyData.normalize_monotone_chains()},
doSplit:function(a,b,c,d){return d?this.polyData.splitPolygonChain(a,b,c):this.polyData.splitPolygonChain(a,c,b)},alyTrap:function(a,b,c,d,e){function l(){var a;return(a=g.pop())?(k=a[0],n=a[1],p=a[2],q=a[3],!0):!1}var g=[],k,n,p,q,r;null==c&&(d=!0,b.uL?c=!0:b.dL?c=!1:(d=!1,c=b.uR?!0:!1));for(b&&g.push([b,c,d,a]);l();)if(!k.monoDiag){if(!k.lseg||!k.rseg)return console.log("ERR alyTrap: lseg/rseg missing",k),g;n?p?(a=k.uL,b=k.uR,c=k.dL,d=k.dR):(a=k.uR,b=k.uL,c=k.dR,d=k.dL):p?(a=k.dL,b=k.dR,c=k.uL,
d=k.uR):(a=k.dR,b=k.dL,c=k.uR,d=k.uL);if(b||d)r=this.doSplit(q,k.vLow,k.vHigh,p);d&&g.push([d,n,!p,r]);b&&g.push([b,!n,!p,r]);c&&g.push([c,n,p,q]);c||d||a&&g.push([a,!n,p,q]);k.monoDiag=!0;if(e)return g}return[]}};PNLTRI.MonoTriangulator=function(a){this.polyData=a};
PNLTRI.MonoTriangulator.prototype={constructor:PNLTRI.MonoTriangulator,triangulate_all_polygons:function(){var a=this.polyData.getMonoSubPolys();this.polyData.clearTriangles();for(var b=0;b<a.length;b++){var c=a[b],d=c.mprev,e=c.mnext;e.mnext==d?this.polyData.addTriangle(c.vFrom,e.vFrom,d.vFrom):this.triangulate_single_polygon(c)}},triangulate_single_polygon:function(a){var b=a.mnext;a=a.vFrom;var c=[b.vFrom],d=0,b=b.mnext,e=b.vFrom;if(e!=a){for(;e!=a||1<d;)if(0<d)if(0<PNLTRI.Math.ptsCrossProd(e,
c[d-1],c[d]))this.polyData.addTriangle(c[d-1],c[d],e),d--;else if(c[++d]=e,e==a)for(console.log("ERR uni-y-monotone: only concave angles left",c);1<d;)d--,this.polyData.addTriangle(c[d-1],c[d],c[d+1]);else b=b.mnext,e=b.vFrom;else c[++d]=e,b=b.mnext,e=b.vFrom;this.polyData.addTriangle(c[d-1],c[d],e)}}};PNLTRI.Triangulator=function(){this.lastPolyData=null};PNLTRI.Triangulator.prototype={constructor:PNLTRI.Triangulator,triangulate_polygon:function(a){if(!a||0==a.length)return[];a=new PNLTRI.PolygonData(a);(new PNLTRI.MonoSplitter(a)).monotonate_trapezoids();(new PNLTRI.MonoTriangulator(a)).triangulate_all_polygons();this.lastPolyData=a;return a.getTriangles()}};
