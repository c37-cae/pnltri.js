// pnltri.js / raw.github.com/jahting/pnltri.js/master/LICENSE
'use strict';var PNLTRI={REVISION:"0.8"};PNLTRI.Math={log2:function(a){return Math.log(a)/Math.LN2},random:Math.random,array_shuffle:function(a){for(var b=a.length-1;0<b;b--){var c=Math.floor(PNLTRI.Math.random()*(b+1)),d=a[b];a[b]=a[c];a[c]=d}return a},ptsCrossProd:function(a,b,c){return(b.x-a.x)*(c.y-a.y)-(b.y-a.y)*(c.x-a.x)}};PNLTRI.Math.EPSILON_P=Math.pow(2,-43);PNLTRI.Math.EPSILON_N=-PNLTRI.Math.EPSILON_P;PNLTRI.PolygonData=function(a){this.vertices=[];this.segments=[];this.monoSubPolyChains=[];this.triangles=[];if(a){this.addPolygonChain(a[0],!1);for(var b=1,c=a.length;b<c;b++)this.addPolygonChain(a[b],!0)}};
PNLTRI.PolygonData.prototype={constructor:PNLTRI.PolygonData,getSegments:function(){return this.segments},getMonoSubPolys:function(){return this.monoSubPolyChains},getTriangles:function(){return this.triangles.concat()},compare_pts_yx:function(a,b){var c=a.y-b.y;if(c>PNLTRI.Math.EPSILON_P)return 1;if(c<PNLTRI.Math.EPSILON_N)return-1;c=a.x-b.x;return c>PNLTRI.Math.EPSILON_P?1:c<PNLTRI.Math.EPSILON_N?-1:0},polygon_area:function(a){for(var b=a.length,c=0,d=b-1,f=0;f<b;d=f++)c+=a[d].x*a[f].y-a[f].x*a[d].y;
return 0.5*c},appendVertexEntry:function(a){a=a?a:{x:null,y:null,outSegs:[]};a.id=this.vertices.length;this.vertices.push(a);return a},createSegmentEntry:function(a,b){return{vFrom:a,vTo:b,upward:1==this.compare_pts_yx(b,a),sprev:null,snext:null}},appendSegmentEntry:function(a){this.segments.push(a);0==this.monoSubPolyChains.length&&(this.monoSubPolyChains=[this.segments[0]]);return a},addVertexChain:function(a,b){function c(a,b){return Math.abs(a.x-b.x)<PNLTRI.Math.EPSILON_P&&Math.abs(a.y-b.y)<PNLTRI.Math.EPSILON_P}
var d=!1;null!=b&&(d=0>this.polygon_area(a),d=b!=d);for(var f=[],n,m,l,g=0;g<a.length;g++)n=this.appendVertexEntry({x:a[g].x,y:a[g].y}),m=!0,l=f.length-1,0<=l&&c(n,f[l])&&(m=!1),m&&f.push(n);1<f.length&&c(f[f.length-1],f[0])&&f.pop();d&&(f=f.reverse());return f},addPolygonChain:function(a,b){var c=this.addVertexChain(a,b);if(3>c.length)return console.log("Polygon has < 3 vertices!",c),0;for(var d=this.segments.length,f,n,m,l=0;l<c.length-1;l++)f=this.createSegmentEntry(c[l],c[l+1]),m?(f.sprev=m,m.snext=
f):n=f,m=f,this.appendSegmentEntry(f);f=this.createSegmentEntry(c[c.length-1],c[0]);f.sprev=m;m.snext=f;this.appendSegmentEntry(f);n.sprev=f;f.snext=n;return this.segments.length-d},initMonoChains:function(){for(var a=0;a<this.segments.length;a++)this.segments[a].marked=!1,this.segments[a].mprev=this.segments[a].sprev,this.segments[a].mnext=this.segments[a].snext,this.segments[a].vFrom.outSegs=[{segOut:this.segments[a],vertTo:this.segments[a].vTo}]},appendVertexOutsegEntry:function(a,b){var c=b?b:
{segOut:null,vertTo:null};a.outSegs.push(c);return c},splitPolygonChain:function(a,b,c){function d(a,b){for(var c,d,f=null,e=4,h=0;h<a.outSegs.length;h++){c=a.outSegs[h];var k=c.vertTo;d=k.x-a.x;var k=k.y-a.y,l=b.x-a.x,m=b.y-a.y,v=(d*l+k*m)/Math.sqrt(d*d+k*k)/Math.sqrt(l*l+m*m);(d=0<=d*m-l*k?1-v:3+v)<e&&(e=d,f=c)}return f}var f=d(b,c),n=d(c,b),f=f.segOut,n=n.segOut,m=1==this.compare_pts_yx(b,c),l=this.appendSegmentEntry({vFrom:b,vTo:c,upward:!m,mprev:f.mprev,mnext:n}),m=this.appendSegmentEntry({vFrom:c,
vTo:b,upward:m,mprev:n.mprev,mnext:f});f.mprev.mnext=l;n.mprev.mnext=m;f.mprev=m;n.mprev=l;this.appendVertexOutsegEntry(b,{segOut:l,vertTo:c});this.appendVertexOutsegEntry(c,{segOut:m,vertTo:b});this.monoSubPolyChains[a]=n;this.monoSubPolyChains.push(f);return this.monoSubPolyChains.length-1},unique_monotone_chains_max:function(){var a,b,c,d,f,n;for(n=0;n<this.segments.length;n++)this.segments[n].marked=!1;var m=[];for(n=0;n<this.monoSubPolyChains.length;n++){a=b=this.monoSubPolyChains[n];d=f=a.vFrom;
a.marked=!0;a=a.mnext;for(var l=!1;(c=a.vFrom)!=d;){if(a.marked){l=!0;break}else a.marked=!0;1==this.compare_pts_yx(c,f)&&(f=c,b=a);a=a.mnext}l||m.push(b)}return m},normalize_monotone_chains:function(){this.monoSubPolyChains=this.unique_monotone_chains_max();return this.monoSubPolyChains.length},clearTriangles:function(){this.triangles=[]},addTriangle:function(a,b,c){this.triangles.push([a.id,b.id,c.id])}};PNLTRI.trapCnt=0;PNLTRI.Trapezoid=function(a,b,c,d){this.trapID=PNLTRI.trapCnt++;this.vHigh=a?a:{x:Number.POSITIVE_INFINITY,y:Number.POSITIVE_INFINITY};this.vLow=b?b:{x:Number.NEGATIVE_INFINITY,y:Number.NEGATIVE_INFINITY};this.lseg=c;this.rseg=d;this.depth=-1;this.monoDiag=null};
PNLTRI.Trapezoid.prototype={constructor:PNLTRI.Trapezoid,clone:function(){var a=new PNLTRI.Trapezoid(this.vHigh,this.vLow,this.lseg,this.rseg);a.uL=this.uL;a.uR=this.uR;a.dL=this.dL;a.dR=this.dR;a.sink=this.sink;return a},setAbove:function(a,b){this.uL=a;this.uR=b},setBelow:function(a,b){this.dL=a;this.dR=b},setSink:function(a){this.sink=a},replaceAbove:function(a,b){this.uL==a?this.uL=b:this.uR==a&&(this.uR=b)},splitOffLower:function(a){var b=this.clone();this.vLow=b.vHigh=a;this.setBelow(b,null);
b.setAbove(this,null);b.dL&&b.dL.replaceAbove(this,b);b.dR&&b.dR.replaceAbove(this,b);return b}};PNLTRI.T_Y=1;PNLTRI.T_X=2;PNLTRI.T_SINK=3;PNLTRI.S_LEFT=1;PNLTRI.S_RIGHT=2;PNLTRI.qsCounter=0;PNLTRI.QsNode=function(a,b,c){this.qsNodeID=PNLTRI.qsCounter++;this.nodetype=a;c&&(a==PNLTRI.T_Y?this.yval=c:a==PNLTRI.T_X?this.seg=c:this.trap=c)};
PNLTRI.QsNode.prototype={constructor:PNLTRI.QsNode,newRight:function(a,b){return this.right=new PNLTRI.QsNode(a,this,b)},newLeft:function(a,b){return this.left=new PNLTRI.QsNode(a,this,b)}};
PNLTRI.QueryStructure=function(a){PNLTRI.trapCnt=0;PNLTRI.qsCounter=0;this.root=new PNLTRI.QsNode(PNLTRI.T_SINK,null,null);var b=new PNLTRI.Trapezoid(null,null,null,null);b.setSink(this.root);this.root.trap=b;this.trapArray=[b];this.segListArray=null;if(a){this.segListArray=a.getSegments();for(b=0;b<this.segListArray.length;b++)this.segListArray[b].rootFrom=this.segListArray[b].rootTo=this.root,this.segListArray[b].is_inserted=!1;this.compare_pts_yx=a.compare_pts_yx}else this.compare_pts_yx=(new PNLTRI.PolygonData(null)).compare_pts_yx};
PNLTRI.QueryStructure.prototype={constructor:PNLTRI.QueryStructure,getRoot:function(){return this.root},getSegListArray:function(){return this.segListArray},cloneTrap:function(a){a=a.clone();this.trapArray.push(a);return a},splitNodeAtPoint:function(a,b,c){var d=a.trap;if(d.vHigh==b||d.vLow==b)return a;var f=d.splitOffLower(b);this.trapArray.push(f);a.nodetype=PNLTRI.T_Y;a.yval=b;a.trap=null;d.sink=a.newRight(PNLTRI.T_SINK,d);f.sink=a.newLeft(PNLTRI.T_SINK,f);return c?d.sink:f.sink},fpEqual:function(a,
b){return Math.abs(a-b)<PNLTRI.Math.EPSILON_P},inside_polygon:function(a){var b=a.rseg;return a.lseg&&a.rseg?!a.uL&&!a.uR||!a.dL&&!a.dR?b.upward:!1:!1},is_left_of:function(a,b,c){c=a.vFrom.x-b.x;var d=a.vTo.x-b.x;if(Math.abs(a.vTo.y-b.y)<PNLTRI.Math.EPSILON_P)a=d,b=c;else if(Math.abs(a.vFrom.y-b.y)<PNLTRI.Math.EPSILON_P)a=c,b=d;else return a.upward?PNLTRI.Math.ptsCrossProd(a.vFrom,a.vTo,b):PNLTRI.Math.ptsCrossProd(a.vTo,a.vFrom,b);return Math.abs(a)<PNLTRI.Math.EPSILON_P?Math.abs(b)<PNLTRI.Math.EPSILON_P?
0:b:a},ptNode:function(a,b,c){var d,f=!0;switch(c.nodetype){case PNLTRI.T_SINK:return c;case PNLTRI.T_Y:d=a;d==c.yval&&(d=b);d=this.compare_pts_yx(d,c.yval);-1==d&&(f=!1);break;case PNLTRI.T_X:if(a==c.seg.vFrom||a==c.seg.vTo){if(this.fpEqual(a.y,b.y)){b.x<a.x&&(f=!1);break}else d=this.is_left_of(c.seg,b,!1),0<d?f=!1:0==d&&(f=a==c.seg.vFrom?!0:!1);break}else d=this.is_left_of(c.seg,a,!0),0<d?f=!1:0==d&&(f=!0);break;default:console.log("ptNode: undef. NodeType: ",c.nodetype)}return f?this.ptNode(a,
b,c.right):this.ptNode(a,b,c.left)},add_segment:function(a){function b(){var a=e.uL||e.uR;a.dL&&a.dR?e==a.dR?(h.setAbove(null,null),k.setAbove(null,a),a.setBelow(a.dL,k)):(k.setAbove(null,null),h.setAbove(a,null),a.setBelow(h,a.dR)):(h.setAbove(a,null),k.setAbove(null,a),a.setBelow(h,k))}function c(a){e.vLow==r.vLow&&s?e.rseg==q?(h.setBelow(a,null),k.setBelow(null,null),a.setAbove(h,a.uR)):(k.setBelow(null,a),h.setBelow(null,null),a.setAbove(a.uL,k)):(a.uL&&a.uR?a.uL==e?(a.usave=a.uR,a.uside=PNLTRI.S_LEFT,
h.setBelow(a,null),k.setBelow(a,null)):(a.usave=a.uL,a.uside=PNLTRI.S_RIGHT,h.setBelow(null,a),k.setBelow(null,a)):e.vLow==r.vLow?(h.setBelow(a,null),k.setBelow(null,a)):(h.setBelow(null,a),k.setBelow(a,null)),a.setAbove(h,k))}function d(){var b;e.vLow==r.vLow&&s?(e.dL.setAbove(h,null),e.dR.setAbove(null,k),b=e.dR,h.setBelow(e.dL,null),k.setBelow(null,b),b=null):0<f.is_left_of(a,e.vLow,!0)?(b=e.dR,e.dL.setAbove(h,null),e.dR.setAbove(h,k),h.setBelow(e.dL,e.dR),k.setBelow(null,e.dR)):(b=e.dL,e.dL.setAbove(h,
k),e.dR.setAbove(null,k),k.setBelow(e.dL,e.dR),h.setBelow(e.dL,null));return b}var f=this,n,m,l,g,p,q;a.upward?(g=a.vFrom,n=a.vTo,p=a.rootFrom,m=a.rootTo,q=a.sprev,l=a.snext):(g=a.vTo,n=a.vFrom,p=a.rootTo,m=a.rootFrom,q=a.snext,l=a.sprev);var s=!1;m=this.ptNode(n,g,m);l.is_inserted||(m=this.splitNodeAtPoint(m,n,!1));l=m.trap;m=this.ptNode(g,n,p);q.is_inserted?s=!0:m=this.splitNodeAtPoint(m,g,!0);var r=m.trap,e=l,h,k,t,u;for(n=this.trapArray.length+2;e;){if(0>--n){console.log("ERR add_segment: infinite loop",
e,a,this);return}if(!e.dL&&!e.dR){console.log("ERR add_segment: missing successors",e,a,this);return}g=e.sink;g.nodetype=PNLTRI.T_X;g.seg=a;g.trap=null;p=m=!0;u&&u.rseg==e.rseg?(m=!1,h=e,k=u,k.vLow=e.vLow,g.right=u.sink,h.sink=g.newLeft(PNLTRI.T_SINK,h)):t&&t.lseg==e.lseg?(p=!1,k=e,h=t,h.vLow=e.vLow,g.left=t.sink,k.sink=g.newRight(PNLTRI.T_SINK,k)):(h=e,k=this.cloneTrap(e),k.sink=g.newRight(PNLTRI.T_SINK,k),h.sink=g.newLeft(PNLTRI.T_SINK,h));e.uL&&e.uR?e.usave?(e.uside==PNLTRI.S_LEFT?(k.setAbove(e.uR,
e.usave),k.uL.setBelow(k,null),k.uR.setBelow(null,k)):(h.setAbove(e.usave,e.uL),h.uL.setBelow(h,null),h.uR.setBelow(null,h)),h.usave=k.usave=null):e.vHigh==l.vHigh?(k.setAbove(null,e.uR),k.uR.setBelow(null,k),h.setAbove(e.uL,null)):(m&&(k.setAbove(e.uR,null),k.uL.setBelow(k,k.uL.dR)),p&&h.setAbove(null,e.uL)):b();e.dL&&e.dR?g=d():(g=e.dL?e.dL:e.dR,c(g));h.rseg=k.lseg=a;e.vLow!=r.vLow?(t=h,u=k,e=g):e=null}a.is_inserted=!0},find_first_inside:function(){for(var a=0,b=this.trapArray.length;a<b;a++)if(this.inside_polygon(this.trapArray[a]))return this.trapArray[a];
return null}};PNLTRI.Trapezoider=function(a){this.polyData=a;this.queryStructure=new PNLTRI.QueryStructure(this.polyData)};
PNLTRI.Trapezoider.prototype={constructor:PNLTRI.Trapezoider,math_logstar_n:function(a){var b;for(b=0;1<=a;b++)a=PNLTRI.Math.log2(a);return b-1},math_NH:function(a,b){var c,d;c=0;for(d=a;c<b;c++)d=PNLTRI.Math.log2(d);return Math.ceil(1*a/d)},find_new_roots:function(a){a.is_inserted||(a.rootFrom=this.queryStructure.ptNode(a.vFrom,a.vTo,a.rootFrom),a.rootTo=this.queryStructure.ptNode(a.vTo,a.vFrom,a.rootTo))},trapezoide_polygon:function(){var a=this.queryStructure.segListArray.slice(0);PNLTRI.Math.array_shuffle(a);
var b,c,d=a.length,f=this.math_logstar_n(d);for(c=1;c<=f;c++){for(b=this.math_NH(d,c-1);b<this.math_NH(d,c);b++)this.queryStructure.add_segment(a[b-1]);for(b=0;b<d;b++)this.find_new_roots(a[b])}for(b=this.math_NH(d,f);b<=d;b++)this.queryStructure.add_segment(a[b-1]);return this.queryStructure.find_first_inside()}};PNLTRI.TRAP_NOSPLIT=-1;PNLTRI.TRAP_MIDDLE=0;PNLTRI.TRAP_LEFT=1;PNLTRI.TRAP_RIGHT=2;PNLTRI.TRAP_CUSP=3;PNLTRI.MonoSplitter=function(a){this.polyData=a;this.startTrap=this.trapezoider=null};
PNLTRI.MonoSplitter.prototype={constructor:PNLTRI.MonoSplitter,monotonate_trapezoids:function(){this.trapezoider=new PNLTRI.Trapezoider(this.polyData);this.startTrap=this.trapezoider.trapezoide_polygon();this.polyData.initMonoChains();this.alyTrap(0,this.startTrap,null,null,null);return this.polyData.normalize_monotone_chains()},doSplit:function(a,b,c,d){return d?this.polyData.splitPolygonChain(a,b,c):this.polyData.splitPolygonChain(a,c,b)},alyTrap:function(a,b,c,d,f){function n(a){for(var b=a.length-
1;0<=b;b--)m.unshift(a[b])}var m=[],l=[];null==c&&(d=!0,b.uL?c=!0:b.dL?c=!1:(d=!1,c=b.uR?!0:!1));for(n([[b,c,d,a]]);l=m.shift();){var g;if((g=l[0])&&!g.monoDiag){if(!g.lseg||!g.rseg)return console.log("ERR alyTrap: lseg/rseg missing",g),g.monoDiag=PNLTRI.TRAP_NOSPLIT,m;a=l[1];b=l[2];var l=l[3],p;p=g.vHigh;var q=g.vLow;d=null;var s,r,e,h;g.uL?g.uR?(d=!0,s=g.uL,r=g.uR,e=PNLTRI.TRAP_MIDDLE):e=PNLTRI.TRAP_RIGHT:e=g.uR?PNLTRI.TRAP_LEFT:PNLTRI.TRAP_CUSP;g.dL?g.dR?(d=!1,s=g.dL,r=g.dR,h=PNLTRI.TRAP_MIDDLE):
h=PNLTRI.TRAP_RIGHT:h=g.dR?PNLTRI.TRAP_LEFT:PNLTRI.TRAP_CUSP;g.monoDiag=1+4*e+h;null!=d?e==PNLTRI.TRAP_CUSP||h==PNLTRI.TRAP_CUSP?(p=this.doSplit(l,q,p,b),n([[b?s:r,!a,b,l],[b?r:s,!a,!b,p]])):e==PNLTRI.TRAP_MIDDLE&&h==PNLTRI.TRAP_MIDDLE?(p=this.doSplit(l,q,p,b),b||(a=p,p=l,l=a),n([[g.uL,!1,!0,l],[g.dL,!0,!0,l],[g.uR,!1,!1,p],[g.dR,!0,!1,p]])):(d?(c=g.dL?g.dL:g.dR,e=h==PNLTRI.TRAP_LEFT):(c=g.uL?g.uL:g.uR,e=e==PNLTRI.TRAP_LEFT),a==d&&b==e?l=this.doSplit(l,q,p,e):(p=this.doSplit(l,q,p,!e),n([[e?s:r,!d,
e,p]])),n([[e?r:s,!d,!e,l],[c,d,!e,l]])):(e==PNLTRI.TRAP_CUSP||h==PNLTRI.TRAP_CUSP?g.monoDiag=PNLTRI.TRAP_NOSPLIT:(e==h?g.monoDiag=PNLTRI.TRAP_NOSPLIT:l=e==PNLTRI.TRAP_LEFT?this.doSplit(l,q,p,!a):this.doSplit(l,q,p,a),a=!a),a?(c=g.uL?g.uL:g.uR,e=e==PNLTRI.TRAP_LEFT):(c=g.dL?g.dL:g.dR,e=h==PNLTRI.TRAP_LEFT),n([[c,!a,!e,l]]))}if(f)return m}return[]}};PNLTRI.MonoTriangulator=function(a){this.polyData=a};
PNLTRI.MonoTriangulator.prototype={constructor:PNLTRI.MonoTriangulator,triangulate_all_polygons:function(){var a=this.polyData.getMonoSubPolys();this.polyData.clearTriangles();for(var b=0;b<a.length;b++){var c=a[b],d=c.mprev,f=c.mnext;f.mnext==d?this.polyData.addTriangle(c.vFrom,f.vFrom,d.vFrom):this.triangulate_single_polygon(c)}},triangulate_single_polygon:function(a){var b=a.mnext;a=a.vFrom;for(var c=[b.vFrom],d=0,b=b.mnext,f=b.vFrom;f!=a||1<d;)if(0<d)if(0<PNLTRI.Math.ptsCrossProd(f,c[d-1],c[d]))this.polyData.addTriangle(c[d-
1],c[d],f),d--;else if(c[++d]=f,f==a)for(console.log("ERR uni-y-monotone: only concave angles left",c);1<d;)d--,this.polyData.addTriangle(c[d-1],c[d],c[d+1]);else b=b.mnext,f=b.vFrom;else c[++d]=f,b=b.mnext,f=b.vFrom;this.polyData.addTriangle(c[d-1],c[d],f)}};PNLTRI.Triangulator=function(){this.lastPolyData=null};PNLTRI.Triangulator.prototype={constructor:PNLTRI.Triangulator,triangulate_polygon:function(a){if(!a||0==a.length)return[];a=new PNLTRI.PolygonData(a);(new PNLTRI.MonoSplitter(a)).monotonate_trapezoids();(new PNLTRI.MonoTriangulator(a)).triangulate_all_polygons();this.lastPolyData=a;return a.getTriangles()}};
