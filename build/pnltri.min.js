// pnltri.js / raw.github.com/jahting/pnltri.js/master/LICENSE
'use strict';var PNLTRI={REVISION:"0.8"};PNLTRI.Math={log2:function(b){return Math.log(b)/Math.LN2},random:Math.random,array_shuffle:function(b){for(var a=b.length-1;0<a;a--){var c=Math.floor(PNLTRI.Math.random()*(a+1)),e=b[a];b[a]=b[c];b[c]=e}return b},ptsCrossProd:function(b,a,c){return(a.x-b.x)*(c.y-b.y)-(a.y-b.y)*(c.x-b.x)}};PNLTRI.Math.EPSILON_P=Math.pow(2,-45);PNLTRI.Math.EPSILON_N=-PNLTRI.Math.EPSILON_P;PNLTRI.PolygonData=function(b){this.vertices=[];this.segments=[];this.monoSubPolyChains=[];this.triangles=[];if(b){this.addPolygonChain(b[0],!1);for(var a=1,c=b.length;a<c;a++)this.addPolygonChain(b[a],!0)}};
PNLTRI.PolygonData.prototype={constructor:PNLTRI.PolygonData,getSegments:function(){return this.segments},getMonoSubPolys:function(){return this.monoSubPolyChains},getTriangles:function(){return this.triangles.concat()},compare_pts_yx:function(b,a){var c=b.y-a.y;if(c>PNLTRI.Math.EPSILON_P)return 1;if(c<PNLTRI.Math.EPSILON_N)return-1;c=b.x-a.x;return c>PNLTRI.Math.EPSILON_P?1:c<PNLTRI.Math.EPSILON_N?-1:0},polygon_area:function(b){for(var a=b.length,c=0,e=a-1,d=0;d<a;e=d++)c+=b[e].x*b[d].y-b[d].x*b[e].y;
return 0.5*c},appendVertexEntry:function(b){b=b?b:{pt:null,outSegs:[]};b.id=this.vertices.length;this.vertices.push(b);return b},createSegmentEntry:function(b,a){return{vFrom:b,vTo:a,upward:1==this.compare_pts_yx(a.pt,b.pt),sprev:null,snext:null}},appendSegmentEntry:function(b){this.segments.push(b);0==this.monoSubPolyChains.length&&(this.monoSubPolyChains=[this.segments[0]]);return b},addVertexChain:function(b,a){function c(a,b){return Math.abs(a.pt.x-b.pt.x)<PNLTRI.Math.EPSILON_P&&Math.abs(a.pt.y-
b.pt.y)<PNLTRI.Math.EPSILON_P}var e=!1;null!=a&&(e=0>this.polygon_area(b),e=a!=e);for(var d=[],f,h,m,n=0;n<b.length;n++)f=this.appendVertexEntry({pt:{x:b[n].x,y:b[n].y}}),h=!0,m=d.length-1,0<=m&&c(f,d[m])&&(h=!1),h&&d.push(f);1<d.length&&c(d[d.length-1],d[0])&&d.pop();e&&(d=d.reverse());return d},addPolygonChain:function(b,a){var c=this.addVertexChain(b,a);if(3>c.length)return console.log("Polygon has < 3 vertices!",c),0;for(var e=this.segments.length,d,f,h,m=0;m<c.length-1;m++)d=this.createSegmentEntry(c[m],
c[m+1]),h?(d.sprev=h,h.snext=d):f=d,h=d,this.appendSegmentEntry(d);d=this.createSegmentEntry(c[c.length-1],c[0]);d.sprev=h;h.snext=d;this.appendSegmentEntry(d);f.sprev=d;d.snext=f;return this.segments.length-e},initMonoChains:function(){for(var b=0;b<this.segments.length;b++)this.segments[b].marked=!1,this.segments[b].mprev=this.segments[b].sprev,this.segments[b].mnext=this.segments[b].snext,this.segments[b].vFrom.outSegs=[{segOut:this.segments[b],vertTo:this.segments[b].vTo}]},appendVertexOutsegEntry:function(b,
a){var c=a?a:{segOut:null,vertTo:null};b.outSegs.push(c);return c},splitPolygonChain:function(b,a,c){function e(a,b){for(var c,d,e=null,f=4,k=0;k<a.outSegs.length;k++){c=a.outSegs[k];var h=a.pt,m=c.vertTo.pt,r=b.pt;d=m.x-h.x;var m=m.y-h.y,t=r.x-h.x,h=r.y-h.y,r=(d*t+m*h)/Math.sqrt(d*d+m*m)/Math.sqrt(t*t+h*h);(d=0<=d*h-t*m?1-r:3+r)<f&&(f=d,e=c)}return e}var d=e(a,c),f=e(c,a),d=d.segOut,f=f.segOut,h=1==this.compare_pts_yx(a.pt,c.pt),m=this.appendSegmentEntry({vFrom:a,vTo:c,upward:!h,mprev:d.mprev,mnext:f}),
h=this.appendSegmentEntry({vFrom:c,vTo:a,upward:h,mprev:f.mprev,mnext:d});d.mprev.mnext=m;f.mprev.mnext=h;d.mprev=h;f.mprev=m;this.appendVertexOutsegEntry(a,{segOut:m,vertTo:c});this.appendVertexOutsegEntry(c,{segOut:h,vertTo:a});this.monoSubPolyChains[b]=f;this.monoSubPolyChains.push(d);return this.monoSubPolyChains.length-1},unique_monotone_chains_max:function(){var b,a,c,e,d,f;for(f=0;f<this.segments.length;f++)this.segments[f].marked=!1;var h=[];for(f=0;f<this.monoSubPolyChains.length;f++){b=
a=this.monoSubPolyChains[f];e=d=b.vFrom.pt;b.marked=!0;b=b.mnext;for(var m=!1;(c=b.vFrom.pt)!=e;){if(b.marked){m=!0;break}else b.marked=!0;1==this.compare_pts_yx(c,d)&&(d=c,a=b);b=b.mnext}m||h.push(a)}return h},normalize_monotone_chains:function(){this.monoSubPolyChains=this.unique_monotone_chains_max();return this.monoSubPolyChains.length},clearTriangles:function(){this.triangles=[]},addTriangle:function(b,a,c){this.triangles.push([b.id,a.id,c.id])}};PNLTRI.trapCounter=0;PNLTRI.Trapezoid=function(b,a,c,e){this.trapID=PNLTRI.trapCounter++;this.hiPt=b?b:{x:Number.POSITIVE_INFINITY,y:Number.POSITIVE_INFINITY};this.loPt=a?a:{x:Number.NEGATIVE_INFINITY,y:Number.NEGATIVE_INFINITY};this.lseg=c;this.rseg=e;this.monoDiag=null};
PNLTRI.Trapezoid.prototype={constructor:PNLTRI.Trapezoid,setAbove:function(b,a){this.u0=b;this.u1=a},setBelow:function(b,a){this.d0=b;this.d1=a},setSink:function(b){this.sink=b},replaceAbove:function(b,a){this.u0==b?this.u0=a:this.u1==b&&(this.u1=a)},splitOffLower:function(b){var a=this.clone();this.loPt=a.hiPt=b;this.d0=a;this.d1=null;a.u0=this;a.u1=null;a.d0&&a.d0.replaceAbove(this,a);a.d1&&a.d1.replaceAbove(this,a);return a},clone:function(){var b=new PNLTRI.Trapezoid(this.hiPt,this.loPt,this.lseg,
this.rseg);b.u0=this.u0;b.u1=this.u1;b.d0=this.d0;b.d1=this.d1;b.sink=this.sink;return b}};PNLTRI.T_Y=1;PNLTRI.T_X=2;PNLTRI.T_SINK=3;PNLTRI.S_LEFT=1;PNLTRI.S_RIGHT=2;PNLTRI.qsCounter=0;PNLTRI.QsNode=function(b,a,c){this.qsNodeID=PNLTRI.qsCounter++;this.nodetype=b;c&&(b==PNLTRI.T_Y?this.yval=c:b==PNLTRI.T_X?this.seg=c:this.trap=c)};
PNLTRI.QsNode.prototype={constructor:PNLTRI.QsNode,newRight:function(b,a){return this.right=new PNLTRI.QsNode(b,this,a)},newLeft:function(b,a){return this.left=new PNLTRI.QsNode(b,this,a)}};
PNLTRI.QueryStructure=function(b){PNLTRI.trapCounter=0;PNLTRI.qsCounter=0;this.root=new PNLTRI.QsNode(PNLTRI.T_SINK,null,null);var a=new PNLTRI.Trapezoid(null,null,null,null);a.setSink(this.root);this.root.trap=a;this.trapezoids=[a];this.segListArray=null;if(b){this.segListArray=b.getSegments();for(a=0;a<this.segListArray.length;a++)this.segListArray[a].rootFrom=this.segListArray[a].rootTo=this.root,this.segListArray[a].is_inserted=!1;this.compare_pts_yx=b.compare_pts_yx}else this.compare_pts_yx=
(new PNLTRI.PolygonData(null)).compare_pts_yx};
PNLTRI.QueryStructure.prototype={constructor:PNLTRI.QueryStructure,getRoot:function(){return this.root},getSegListArray:function(){return this.segListArray},cloneTrap:function(b){b=b.clone();this.trapezoids.push(b);return b},splitNodeAtPoint:function(b,a,c){var e=b.trap;if(e.hiPt==a||e.loPt==a)return b;var d=e.splitOffLower(a);this.trapezoids.push(d);b.nodetype=PNLTRI.T_Y;b.yval=a;b.trap=null;e.sink=b.newRight(PNLTRI.T_SINK,e);d.sink=b.newLeft(PNLTRI.T_SINK,d);return c?e.sink:d.sink},fpEqual:function(b,
a){return Math.abs(b-a)<PNLTRI.Math.EPSILON_P},inside_polygon:function(b){var a=b.rseg;return b.lseg&&b.rseg?!b.u0&&!b.u1||!b.d0&&!b.d1?a.upward:!1:!1},is_left_of:function(b,a,c){var e;e=b.vFrom.pt.x-a.x;var d=b.vTo.pt.x-a.x;if(Math.abs(b.vTo.pt.y-a.y)<PNLTRI.Math.EPSILON_P)b=d;else if(Math.abs(b.vFrom.pt.y-a.y)<PNLTRI.Math.EPSILON_P)b=e,e=d;else if(c&&0<e*d)b=d;else return b.upward?PNLTRI.Math.ptsCrossProd(b.vFrom.pt,b.vTo.pt,a):PNLTRI.Math.ptsCrossProd(b.vTo.pt,b.vFrom.pt,a);return Math.abs(b)<
PNLTRI.Math.EPSILON_P?Math.abs(e)<PNLTRI.Math.EPSILON_P?0:e:b},ptNode:function(b,a,c){var e,d=!0;switch(c.nodetype){case PNLTRI.T_SINK:return c;case PNLTRI.T_Y:e=b;e==c.yval&&(e=a);e=this.compare_pts_yx(e,c.yval);-1==e&&(d=!1);break;case PNLTRI.T_X:if(b==c.seg.vFrom.pt||b==c.seg.vTo.pt){if(this.fpEqual(b.y,a.y)){a.x<b.x&&(d=!1);break}else e=this.is_left_of(c.seg,a,!1),0<e?d=!1:0==e&&(d=b==c.seg.vFrom.pt?!0:!1);break}else e=this.is_left_of(c.seg,b,!0),0<e?d=!1:0==e&&(d=!0);break;default:console.log("ptNode: undef. NodeType: ",
c.nodetype)}return d?this.ptNode(b,a,c.right):this.ptNode(b,a,c.left)},add_segment:function(b){function a(a){g.loPt==v.loPt&&u?g.rseg==s?(a.u0=l,l.setBelow(a,null),k.setBelow(null,null)):(a.u1=k,k.setBelow(a,null),l.setBelow(null,null)):(a.u0&&a.u1&&(a.u0==g?(a.usave=a.u1,a.uside=PNLTRI.S_LEFT):(a.usave=a.u0,a.uside=PNLTRI.S_RIGHT)),a.setAbove(l,k),l.setBelow(a,null),k.setBelow(a,null))}function c(){var a;g.loPt==v.loPt&&u?(g.d0.setAbove(l,null),g.d1.setAbove(k,null),a=g.d1,l.setBelow(g.d0,null),
k.setBelow(a,null),a=null):0<e.is_left_of(b,g.loPt,!0)?(a=g.d1,g.d0.setAbove(l,null),g.d1.setAbove(l,k),l.setBelow(g.d0,g.d1),k.setBelow(g.d1,null)):(a=g.d0,g.d0.setAbove(l,k),g.d1.setAbove(k,null),k.setBelow(g.d0,g.d1),l.setBelow(g.d0,null));return a}var e=this,d,f,h,m,n,s;b.upward?(m=b.vFrom.pt,d=b.vTo.pt,n=b.rootFrom,f=b.rootTo,s=b.sprev,h=b.snext):(m=b.vTo.pt,d=b.vFrom.pt,n=b.rootTo,f=b.rootFrom,s=b.snext,h=b.sprev);var u=!1;f=this.ptNode(d,m,f);h.is_inserted||(f=this.splitNodeAtPoint(f,d,!1));
var g=f.trap;f=this.ptNode(m,d,n);s.is_inserted?u=!0:f=this.splitNodeAtPoint(f,m,!0);var v=f.trap,l,k,p,q;for(d=this.trapezoids.length+2;g;){if(0>--d){console.log("ERR add_segment: infinite loop",g,b,this);return}if(!g.d0&&!g.d1){console.log("ERR add_segment: missing successors",g,b,this);return}h=g.sink;h.nodetype=PNLTRI.T_X;h.seg=b;h.trap=null;m=n=!0;q&&q.rseg==g.rseg?(n=!1,l=g,k=q,k.loPt=g.loPt,h.right=q.sink,l.sink=h.newLeft(PNLTRI.T_SINK,l)):p&&p.lseg==g.lseg?(m=!1,k=g,l=p,l.loPt=g.loPt,h.left=
p.sink,k.sink=h.newRight(PNLTRI.T_SINK,k)):(l=g,k=this.cloneTrap(g),k.sink=h.newRight(PNLTRI.T_SINK,k),l.sink=h.newLeft(PNLTRI.T_SINK,l));g.u0&&g.u1?g.usave?(g.uside==PNLTRI.S_LEFT?(n&&(k.setAbove(g.u1,g.usave),k.u0.d0=k,k.u1.d0=k),m&&(l.u1=null,l.u0.d0=l)):(n&&(k.setAbove(g.u1,null),k.u0.d0=k),m&&(l.setAbove(g.usave,g.u0),l.u0.d0=l,l.u1.d0=l)),l.usave=k.usave=null):(n&&(k.setAbove(g.u1,null),k.u0.d0=k),m&&(l.u1=null)):g.u0.d0&&g.u0.d1?g==g.u0.d1?(n&&(k.u0.d1=k,k.u1=null),m&&l.setAbove(null,null)):
(n&&k.setAbove(null,null),m&&(l.u0.d0=l,l.u1=null)):m&&l.u0.setBelow(l,k);g.d0&&g.d1?h=c():(h=g.d0?g.d0:g.d1,a(h));l.rseg=k.lseg=b;g.loPt!=v.loPt?(p=l,q=k,g=h):g=null}b.is_inserted=!0},find_first_inside:function(){for(var b=0,a=this.trapezoids.length;b<a;b++)if(this.inside_polygon(this.trapezoids[b]))return this.trapezoids[b];return null}};PNLTRI.Trapezoider=function(b){this.polyData=b;this.queryStructure=new PNLTRI.QueryStructure(this.polyData)};
PNLTRI.Trapezoider.prototype={constructor:PNLTRI.Trapezoider,math_logstar_n:function(b){var a;for(a=0;1<=b;a++)b=PNLTRI.Math.log2(b);return a-1},math_NH:function(b,a){var c,e;c=0;for(e=b;c<a;c++)e=PNLTRI.Math.log2(e);return Math.ceil(1*b/e)},find_new_roots:function(b){b.is_inserted||(b.rootFrom=this.queryStructure.ptNode(b.vFrom.pt,b.vTo.pt,b.rootFrom),b.rootTo=this.queryStructure.ptNode(b.vTo.pt,b.vFrom.pt,b.rootTo))},trapezoide_polygon:function(){var b=this.queryStructure.segListArray.slice(0);
PNLTRI.Math.array_shuffle(b);var a,c,e=b.length,d=this.math_logstar_n(e);for(c=1;c<=d;c++){for(a=this.math_NH(e,c-1);a<this.math_NH(e,c);a++)this.queryStructure.add_segment(b[a-1]);for(a=0;a<e;a++)this.find_new_roots(b[a])}for(a=this.math_NH(e,d);a<=e;a++)this.queryStructure.add_segment(b[a-1]);return this.queryStructure.find_first_inside()}};PNLTRI.FRUP=1;PNLTRI.FRDN=2;PNLTRI.TRAP_NOSPLIT=-1;PNLTRI.TRAP_TL_BR=1;PNLTRI.TRAP_TR_BL=2;PNLTRI.TRAP_TL_BM=3;PNLTRI.TRAP_TR_BM=4;PNLTRI.TRAP_TM_BL=5;PNLTRI.TRAP_TM_BR=6;PNLTRI.TRAP_TM_BM=7;PNLTRI.TRAP_TLR_BM=8;PNLTRI.TRAP_TM_BLR=9;PNLTRI.MonoSplitter=function(b){this.polyData=b;this.startTrap=this.trapezoider=null};
PNLTRI.MonoSplitter.prototype={constructor:PNLTRI.MonoSplitter,monotonate_trapezoids:function(){this.trapezoider=new PNLTRI.Trapezoider(this.polyData);this.startTrap=this.trapezoider.trapezoide_polygon();this.polyData.initMonoChains();this.alyTrap(0,this.startTrap,null,PNLTRI.FRUP);return this.polyData.normalize_monotone_chains()},doSplit:function(b,a,c){return this.polyData.splitPolygonChain(b,a,c)},alyTrap:function(b,a,c,e){var d,f;a&&!a.monoDiag&&(a.lseg&&a.rseg?a.u0||a.u1?a.d0||a.d1?a.u0&&a.u1?
a.d0&&a.d1?(d=a.d1.lseg.vFrom,f=a.u0.rseg.vFrom,a.monoDiag=PNLTRI.TRAP_TM_BM,e==PNLTRI.FRDN&&a.d1==c||e==PNLTRI.FRUP&&a.u1==c?(c=this.doSplit(b,f,d),this.alyTrap(b,a.u1,a,PNLTRI.FRDN),this.alyTrap(b,a.d1,a,PNLTRI.FRUP),this.alyTrap(c,a.u0,a,PNLTRI.FRDN),this.alyTrap(c,a.d0,a,PNLTRI.FRUP)):(c=this.doSplit(b,d,f),this.alyTrap(b,a.u0,a,PNLTRI.FRDN),this.alyTrap(b,a.d0,a,PNLTRI.FRUP),this.alyTrap(c,a.u1,a,PNLTRI.FRDN),this.alyTrap(c,a.d1,a,PNLTRI.FRUP))):a.loPt==a.lseg.vTo.pt?(d=a.u0.rseg.vFrom,f=a.lseg.snext.vFrom,
a.monoDiag=PNLTRI.TRAP_TM_BL,e==PNLTRI.FRUP&&a.u0==c?(c=this.doSplit(b,f,d),this.alyTrap(c,a.d0,a,PNLTRI.FRUP),this.alyTrap(c,a.u1,a,PNLTRI.FRDN),this.alyTrap(c,a.d1,a,PNLTRI.FRUP)):(c=this.doSplit(b,d,f),this.alyTrap(b,a.u1,a,PNLTRI.FRDN),this.alyTrap(b,a.d0,a,PNLTRI.FRUP),this.alyTrap(b,a.d1,a,PNLTRI.FRUP),this.alyTrap(c,a.u0,a,PNLTRI.FRDN))):(d=a.rseg.vFrom,f=a.u0.rseg.vFrom,a.monoDiag=PNLTRI.TRAP_TM_BR,e==PNLTRI.FRUP&&a.u1==c?(c=this.doSplit(b,f,d),this.alyTrap(c,a.d1,a,PNLTRI.FRUP),this.alyTrap(c,
a.d0,a,PNLTRI.FRUP),this.alyTrap(c,a.u0,a,PNLTRI.FRDN)):(c=this.doSplit(b,d,f),this.alyTrap(b,a.u0,a,PNLTRI.FRDN),this.alyTrap(b,a.d0,a,PNLTRI.FRUP),this.alyTrap(b,a.d1,a,PNLTRI.FRUP),this.alyTrap(c,a.u1,a,PNLTRI.FRDN))):a.d0&&a.d1?a.hiPt==a.lseg.vFrom.pt?(d=a.d1.lseg.vFrom,f=a.lseg.vFrom,a.monoDiag=PNLTRI.TRAP_TL_BM,e!=PNLTRI.FRDN||a.d0!=c?(c=this.doSplit(b,f,d),this.alyTrap(b,a.u1,a,PNLTRI.FRDN),this.alyTrap(b,a.d1,a,PNLTRI.FRUP),this.alyTrap(b,a.u0,a,PNLTRI.FRDN),this.alyTrap(c,a.d0,a,PNLTRI.FRUP)):
(c=this.doSplit(b,d,f),this.alyTrap(c,a.u0,a,PNLTRI.FRDN),this.alyTrap(c,a.u1,a,PNLTRI.FRDN),this.alyTrap(c,a.d1,a,PNLTRI.FRUP))):(d=a.d1.lseg.vFrom,f=a.rseg.snext.vFrom,a.monoDiag=PNLTRI.TRAP_TR_BM,e==PNLTRI.FRDN&&a.d1==c?(c=this.doSplit(b,f,d),this.alyTrap(c,a.u1,a,PNLTRI.FRDN),this.alyTrap(c,a.u0,a,PNLTRI.FRDN),this.alyTrap(c,a.d0,a,PNLTRI.FRUP)):(c=this.doSplit(b,d,f),this.alyTrap(b,a.u0,a,PNLTRI.FRDN),this.alyTrap(b,a.d0,a,PNLTRI.FRUP),this.alyTrap(b,a.u1,a,PNLTRI.FRDN),this.alyTrap(c,a.d1,a,
PNLTRI.FRUP))):a.hiPt==a.lseg.vFrom.pt&&a.loPt==a.rseg.vFrom.pt?(d=a.rseg.vFrom,f=a.lseg.vFrom,a.monoDiag=PNLTRI.TRAP_TL_BR,e==PNLTRI.FRUP?(c=this.doSplit(b,f,d),this.alyTrap(c,a.d1,a,PNLTRI.FRUP),this.alyTrap(c,a.d0,a,PNLTRI.FRUP)):(c=this.doSplit(b,d,f),this.alyTrap(c,a.u0,a,PNLTRI.FRDN),this.alyTrap(c,a.u1,a,PNLTRI.FRDN))):a.hiPt==a.rseg.vTo.pt&&a.loPt==a.lseg.vTo.pt?(d=a.rseg.snext.vFrom,f=a.lseg.snext.vFrom,a.monoDiag=PNLTRI.TRAP_TR_BL,e==PNLTRI.FRUP?(c=this.doSplit(b,f,d),this.alyTrap(c,a.d1,
a,PNLTRI.FRUP),this.alyTrap(c,a.d0,a,PNLTRI.FRUP)):(c=this.doSplit(b,d,f),this.alyTrap(c,a.u0,a,PNLTRI.FRDN),this.alyTrap(c,a.u1,a,PNLTRI.FRDN))):(a.monoDiag=PNLTRI.TRAP_NOSPLIT,e==PNLTRI.FRUP?(this.alyTrap(b,a.d0,a,PNLTRI.FRUP),this.alyTrap(b,a.d1,a,PNLTRI.FRUP)):(this.alyTrap(b,a.u0,a,PNLTRI.FRDN),this.alyTrap(b,a.u1,a,PNLTRI.FRDN))):a.u0&&a.u1?(d=a.rseg.vFrom,f=a.u0.rseg.vFrom,a.monoDiag=PNLTRI.TRAP_TM_BLR,c==a.u1?(c=this.doSplit(b,f,d),this.alyTrap(b,a.u1,a,PNLTRI.FRDN),this.alyTrap(c,a.u0,a,
PNLTRI.FRDN)):(c=this.doSplit(b,d,f),this.alyTrap(b,a.u0,a,PNLTRI.FRDN),this.alyTrap(c,a.u1,a,PNLTRI.FRDN))):(a.monoDiag=PNLTRI.TRAP_NOSPLIT,this.alyTrap(b,a.u0,a,PNLTRI.FRDN),this.alyTrap(b,a.u1,a,PNLTRI.FRDN)):a.d0&&a.d1?(d=a.d1.lseg.vFrom,f=a.lseg.vFrom,a.monoDiag=PNLTRI.TRAP_TLR_BM,c==a.d1?(c=this.doSplit(b,f,d),this.alyTrap(b,a.d1,a,PNLTRI.FRUP),this.alyTrap(c,a.d0,a,PNLTRI.FRUP)):(c=this.doSplit(b,d,f),this.alyTrap(b,a.d0,a,PNLTRI.FRUP),this.alyTrap(c,a.d1,a,PNLTRI.FRUP))):(a.monoDiag=PNLTRI.TRAP_NOSPLIT,
this.alyTrap(b,a.d0,a,PNLTRI.FRUP),this.alyTrap(b,a.d1,a,PNLTRI.FRUP)):(console.log("ERR alyTrap: lseg/rseg missing",a),a.monoDiag=PNLTRI.TRAP_NOSPLIT))}};PNLTRI.MonoTriangulator=function(b){this.polyData=b};
PNLTRI.MonoTriangulator.prototype={constructor:PNLTRI.MonoTriangulator,triangulate_all_polygons:function(){var b=this.polyData.getMonoSubPolys();this.polyData.clearTriangles();for(var a=0;a<b.length;a++){var c=b[a],e=c.mprev,d=c.mnext;d.mnext==e?this.polyData.addTriangle(c.vFrom,d.vFrom,e.vFrom):this.triangulate_single_polygon(c)}},triangulate_single_polygon:function(b){var a=b.mnext;b=b.vFrom;for(var c=[a.vFrom],e=0,a=a.mnext,d=a.vFrom;d!=b||1<e;)if(0<e)if(0<PNLTRI.Math.ptsCrossProd(d.pt,c[e-1].pt,
c[e].pt))this.polyData.addTriangle(c[e-1],c[e],d),e--;else if(c[++e]=d,d==b)for(console.log("ERR uni-y-monotone: only concave angles left",c);1<e;)e--,this.polyData.addTriangle(c[e-1],c[e],c[e+1]);else a=a.mnext,d=a.vFrom;else c[++e]=d,a=a.mnext,d=a.vFrom;this.polyData.addTriangle(c[e-1],c[e],d)}};PNLTRI.Triangulator=function(){this.lastPolyData=null};PNLTRI.Triangulator.prototype={constructor:PNLTRI.Triangulator,triangulate_polygon:function(b){if(!b||0==b.length)return[];b=new PNLTRI.PolygonData(b);(new PNLTRI.MonoSplitter(b)).monotonate_trapezoids();(new PNLTRI.MonoTriangulator(b)).triangulate_all_polygons();this.lastPolyData=b;return b.getTriangles()}};
