// pnltri.js / raw.github.com/jahting/pnltri.js/master/LICENSE
'use strict';var PNLTRI={REVISION:"0.8"};PNLTRI.Math={log2:function(a){return Math.log(a)/Math.LN2},random:Math.random,array_shuffle:function(a){for(var b=a.length-1;0<b;b--){var c=Math.floor(PNLTRI.Math.random()*(b+1)),d=a[b];a[b]=a[c];a[c]=d}return a},ptsCrossProd:function(a,b,c){return(b.x-a.x)*(c.y-a.y)-(b.y-a.y)*(c.x-a.x)}};PNLTRI.Math.EPSILON_P=Math.pow(2,-43);PNLTRI.Math.EPSILON_N=-PNLTRI.Math.EPSILON_P;PNLTRI.PolygonData=function(a){this.vertices=[];this.segments=[];this.monoSubPolyChains=[];this.triangles=[];if(a){this.addPolygonChain(a[0],!1);for(var b=1,c=a.length;b<c;b++)this.addPolygonChain(a[b],!0)}};
PNLTRI.PolygonData.prototype={constructor:PNLTRI.PolygonData,getSegments:function(){return this.segments},getMonoSubPolys:function(){return this.monoSubPolyChains},getTriangles:function(){return this.triangles.concat()},compare_pts_yx:function(a,b){var c=a.y-b.y;if(c>PNLTRI.Math.EPSILON_P)return 1;if(c<PNLTRI.Math.EPSILON_N)return-1;c=a.x-b.x;return c>PNLTRI.Math.EPSILON_P?1:c<PNLTRI.Math.EPSILON_N?-1:0},polygon_area:function(a){for(var b=a.length,c=0,d=b-1,e=0;e<b;d=e++)c+=a[d].x*a[e].y-a[e].x*a[d].y;
return 0.5*c},appendVertexEntry:function(a){a=a?a:{x:null,y:null,outSegs:[]};a.id=this.vertices.length;this.vertices.push(a);return a},createSegmentEntry:function(a,b){return{vFrom:a,vTo:b,upward:1==this.compare_pts_yx(b,a),sprev:null,snext:null}},appendSegmentEntry:function(a){this.segments.push(a);0==this.monoSubPolyChains.length&&(this.monoSubPolyChains=[this.segments[0]]);return a},addVertexChain:function(a,b){function c(a,b){return Math.abs(a.x-b.x)<PNLTRI.Math.EPSILON_P&&Math.abs(a.y-b.y)<PNLTRI.Math.EPSILON_P}
var d=!1;null!=b&&(d=0>this.polygon_area(a),d=b!=d);for(var e=[],n,m,l,f=0;f<a.length;f++)n=this.appendVertexEntry({x:a[f].x,y:a[f].y}),m=!0,l=e.length-1,0<=l&&c(n,e[l])&&(m=!1),m&&e.push(n);1<e.length&&c(e[e.length-1],e[0])&&e.pop();d&&(e=e.reverse());return e},addPolygonChain:function(a,b){var c=this.addVertexChain(a,b);if(3>c.length)return console.log("Polygon has < 3 vertices!",c),0;for(var d=this.segments.length,e,n,m,l=0;l<c.length-1;l++)e=this.createSegmentEntry(c[l],c[l+1]),m?(e.sprev=m,m.snext=
e):n=e,m=e,this.appendSegmentEntry(e);e=this.createSegmentEntry(c[c.length-1],c[0]);e.sprev=m;m.snext=e;this.appendSegmentEntry(e);n.sprev=e;e.snext=n;return this.segments.length-d},initMonoChains:function(){for(var a=0;a<this.segments.length;a++)this.segments[a].marked=!1,this.segments[a].mprev=this.segments[a].sprev,this.segments[a].mnext=this.segments[a].snext,this.segments[a].vFrom.outSegs=[{segOut:this.segments[a],vertTo:this.segments[a].vTo}]},appendVertexOutsegEntry:function(a,b){var c=b?b:
{segOut:null,vertTo:null};a.outSegs.push(c);return c},splitPolygonChain:function(a,b,c){function d(a,b){for(var c,d,e=null,g=4,k=0;k<a.outSegs.length;k++){c=a.outSegs[k];var h=c.vertTo;d=h.x-a.x;var h=h.y-a.y,l=b.x-a.x,m=b.y-a.y,v=(d*l+h*m)/Math.sqrt(d*d+h*h)/Math.sqrt(l*l+m*m);(d=0<=d*m-l*h?1-v:3+v)<g&&(g=d,e=c)}return e}var e=d(b,c),n=d(c,b),e=e.segOut,n=n.segOut,m=1==this.compare_pts_yx(b,c),l=this.appendSegmentEntry({vFrom:b,vTo:c,upward:!m,mprev:e.mprev,mnext:n}),m=this.appendSegmentEntry({vFrom:c,
vTo:b,upward:m,mprev:n.mprev,mnext:e});e.mprev.mnext=l;n.mprev.mnext=m;e.mprev=m;n.mprev=l;this.appendVertexOutsegEntry(b,{segOut:l,vertTo:c});this.appendVertexOutsegEntry(c,{segOut:m,vertTo:b});this.monoSubPolyChains[a]=n;this.monoSubPolyChains.push(e);return this.monoSubPolyChains.length-1},unique_monotone_chains_max:function(){var a,b,c,d,e,n;for(n=0;n<this.segments.length;n++)this.segments[n].marked=!1;var m=[];for(n=0;n<this.monoSubPolyChains.length;n++){a=b=this.monoSubPolyChains[n];d=e=a.vFrom;
a.marked=!0;a=a.mnext;for(var l=!1;(c=a.vFrom)!=d;){if(a.marked){l=!0;break}else a.marked=!0;1==this.compare_pts_yx(c,e)&&(e=c,b=a);a=a.mnext}l||m.push(b)}return m},normalize_monotone_chains:function(){this.monoSubPolyChains=this.unique_monotone_chains_max();return this.monoSubPolyChains.length},clearTriangles:function(){this.triangles=[]},addTriangle:function(a,b,c){this.triangles.push([a.id,b.id,c.id])}};PNLTRI.TRAP_MIDDLE=0;PNLTRI.TRAP_LEFT=1;PNLTRI.TRAP_RIGHT=2;PNLTRI.TRAP_CUSP=3;PNLTRI.trapCnt=0;PNLTRI.Trapezoid=function(a,b,c,d){this.trapID=PNLTRI.trapCnt++;this.vHigh=a?a:{x:Number.POSITIVE_INFINITY,y:Number.POSITIVE_INFINITY};this.vLow=b?b:{x:Number.NEGATIVE_INFINITY,y:Number.NEGATIVE_INFINITY};this.lseg=c;this.rseg=d;this.depth=-1;this.monoDiag=null};
PNLTRI.Trapezoid.prototype={constructor:PNLTRI.Trapezoid,clone:function(){var a=new PNLTRI.Trapezoid(this.vHigh,this.vLow,this.lseg,this.rseg);a.uL=this.uL;a.uR=this.uR;a.topLoc=this.topLoc;a.dL=this.dL;a.dR=this.dR;a.botLoc=this.botLoc;a.sink=this.sink;return a},setAbove:function(a,b){this.uL=a;this.uR=b},setBelow:function(a,b){this.dL=a;this.dR=b},setSink:function(a){this.sink=a},replaceAbove:function(a,b){this.uL==a?this.uL=b:this.uR==a&&(this.uR=b)},splitOffLower:function(a){var b=this.clone();
this.vLow=b.vHigh=a;this.botLoc=b.topLoc=PNLTRI.TRAP_MIDDLE;this.setBelow(b,null);b.setAbove(this,null);b.dL&&b.dL.replaceAbove(this,b);b.dR&&b.dR.replaceAbove(this,b);return b}};PNLTRI.T_Y=1;PNLTRI.T_X=2;PNLTRI.T_SINK=3;PNLTRI.S_LEFT=1;PNLTRI.S_RIGHT=2;PNLTRI.qsCounter=0;PNLTRI.QsNode=function(a,b,c){this.qsNodeID=PNLTRI.qsCounter++;this.nodetype=a;c&&(a==PNLTRI.T_Y?this.yval=c:a==PNLTRI.T_X?this.seg=c:this.trap=c)};
PNLTRI.QsNode.prototype={constructor:PNLTRI.QsNode,newRight:function(a,b){return this.right=new PNLTRI.QsNode(a,this,b)},newLeft:function(a,b){return this.left=new PNLTRI.QsNode(a,this,b)}};
PNLTRI.QueryStructure=function(a){PNLTRI.trapCnt=0;PNLTRI.qsCounter=0;this.root=new PNLTRI.QsNode(PNLTRI.T_SINK,null,null);var b=new PNLTRI.Trapezoid(null,null,null,null);b.setSink(this.root);this.root.trap=b;this.trapArray=[b];this.segListArray=null;if(a){this.segListArray=a.getSegments();for(b=0;b<this.segListArray.length;b++)this.segListArray[b].rootFrom=this.segListArray[b].rootTo=this.root,this.segListArray[b].is_inserted=!1;this.compare_pts_yx=a.compare_pts_yx}else this.compare_pts_yx=(new PNLTRI.PolygonData(null)).compare_pts_yx};
PNLTRI.QueryStructure.prototype={constructor:PNLTRI.QueryStructure,getRoot:function(){return this.root},getSegListArray:function(){return this.segListArray},cloneTrap:function(a){a=a.clone();this.trapArray.push(a);return a},splitNodeAtPoint:function(a,b,c){var d=a.trap;if(d.vHigh==b||d.vLow==b)return a;var e=d.splitOffLower(b);this.trapArray.push(e);a.nodetype=PNLTRI.T_Y;a.yval=b;a.trap=null;d.sink=a.newRight(PNLTRI.T_SINK,d);e.sink=a.newLeft(PNLTRI.T_SINK,e);return c?d.sink:e.sink},fpEqual:function(a,
b){return Math.abs(a-b)<PNLTRI.Math.EPSILON_P},inside_polygon:function(a){var b=a.rseg;return a.lseg&&a.rseg?!a.uL&&!a.uR||!a.dL&&!a.dR?b.upward:!1:!1},is_left_of:function(a,b,c){c=a.vFrom.x-b.x;var d=a.vTo.x-b.x;if(Math.abs(a.vTo.y-b.y)<PNLTRI.Math.EPSILON_P)a=d,b=c;else if(Math.abs(a.vFrom.y-b.y)<PNLTRI.Math.EPSILON_P)a=c,b=d;else return a.upward?PNLTRI.Math.ptsCrossProd(a.vFrom,a.vTo,b):PNLTRI.Math.ptsCrossProd(a.vTo,a.vFrom,b);return Math.abs(a)<PNLTRI.Math.EPSILON_P?Math.abs(b)<PNLTRI.Math.EPSILON_P?
0:b:a},ptNode:function(a,b,c){var d,e=!0;switch(c.nodetype){case PNLTRI.T_SINK:return c;case PNLTRI.T_Y:d=a;d==c.yval&&(d=b);d=this.compare_pts_yx(d,c.yval);-1==d&&(e=!1);break;case PNLTRI.T_X:if(a==c.seg.vFrom||a==c.seg.vTo){if(this.fpEqual(a.y,b.y)){b.x<a.x&&(e=!1);break}else d=this.is_left_of(c.seg,b,!1),0<d?e=!1:0==d&&(e=a==c.seg.vFrom?!0:!1);break}else d=this.is_left_of(c.seg,a,!0),0<d?e=!1:0==d&&(e=!0);break;default:console.log("ptNode: undef. NodeType: ",c.nodetype)}return e?this.ptNode(a,
b,c.right):this.ptNode(a,b,c.left)},add_segment:function(a){function b(){var a=g.uL||g.uR;a.dL&&a.dR?g==a.dR?(k.setAbove(null,null),k.topLoc=PNLTRI.TRAP_CUSP,h.topLoc=PNLTRI.TRAP_LEFT,h.setAbove(null,a),a.setBelow(a.dL,h)):(h.setAbove(null,null),h.topLoc=PNLTRI.TRAP_CUSP,k.topLoc=PNLTRI.TRAP_RIGHT,k.setAbove(a,null),a.setBelow(k,a.dR)):(k.setAbove(a,null),k.topLoc=PNLTRI.TRAP_RIGHT,h.topLoc=PNLTRI.TRAP_LEFT,h.setAbove(null,a),a.setBelow(k,h))}function c(a){g.vLow==s.vLow&&q?g.rseg==r?(k.setBelow(a,
null),k.botLoc=PNLTRI.TRAP_RIGHT,h.botLoc=PNLTRI.TRAP_CUSP,h.setBelow(null,null),a.setAbove(k,a.uR)):(h.setBelow(null,a),h.botLoc=PNLTRI.TRAP_LEFT,k.botLoc=PNLTRI.TRAP_CUSP,k.setBelow(null,null),a.setAbove(a.uL,h)):(a.uL&&a.uR?a.uL==g?(a.usave=a.uR,a.uside=PNLTRI.S_LEFT,k.setBelow(a,null),h.setBelow(a,null)):(a.usave=a.uL,a.uside=PNLTRI.S_RIGHT,k.setBelow(null,a),h.setBelow(null,a)):g.vLow==s.vLow?(k.botLoc=PNLTRI.TRAP_RIGHT,h.botLoc=PNLTRI.TRAP_LEFT,k.setBelow(a,null),h.setBelow(null,a)):(k.setBelow(null,
a),h.setBelow(a,null)),a.setAbove(k,h))}function d(){var b;g.vLow==s.vLow&&q?(g.dL.setAbove(k,null),g.dR.setAbove(null,h),b=g.dR,k.setBelow(g.dL,null),h.setBelow(null,b),k.botLoc=PNLTRI.TRAP_RIGHT,h.botLoc=PNLTRI.TRAP_LEFT,b=null):0<e.is_left_of(a,g.vLow,!0)?(b=g.dR,g.dL.setAbove(k,null),g.dR.setAbove(k,h),k.setBelow(g.dL,g.dR),h.setBelow(null,g.dR)):(b=g.dL,g.dL.setAbove(k,h),g.dR.setAbove(null,h),h.setBelow(g.dL,g.dR),k.setBelow(g.dL,null));return b}var e=this,n,m,l,f,p,r;a.upward?(f=a.vFrom,n=
a.vTo,p=a.rootFrom,m=a.rootTo,r=a.sprev,l=a.snext):(f=a.vTo,n=a.vFrom,p=a.rootTo,m=a.rootFrom,r=a.snext,l=a.sprev);var q=!1;m=this.ptNode(n,f,m);l.is_inserted||(m=this.splitNodeAtPoint(m,n,!1));l=m.trap;m=this.ptNode(f,n,p);r.is_inserted?q=!0:m=this.splitNodeAtPoint(m,f,!0);var s=m.trap,g=l,k,h,t,u;for(n=this.trapArray.length+2;g;){if(0>--n){console.log("ERR add_segment: infinite loop",g,a,this);return}if(!g.dL&&!g.dR){console.log("ERR add_segment: missing successors",g,a,this);return}f=g.sink;f.nodetype=
PNLTRI.T_X;f.seg=a;f.trap=null;p=m=!0;u&&u.rseg==g.rseg?(m=!1,k=g,h=u,h.vLow=g.vLow,h.botLoc=g.botLoc,f.right=u.sink,k.sink=f.newLeft(PNLTRI.T_SINK,k)):t&&t.lseg==g.lseg?(p=!1,h=g,k=t,k.vLow=g.vLow,k.botLoc=g.botLoc,f.left=t.sink,h.sink=f.newRight(PNLTRI.T_SINK,h)):(k=g,h=this.cloneTrap(g),h.sink=f.newRight(PNLTRI.T_SINK,h),k.sink=f.newLeft(PNLTRI.T_SINK,k));g.uL&&g.uR?g.usave?(g.uside==PNLTRI.S_LEFT?(h.setAbove(g.uR,g.usave),h.uL.setBelow(h,null),h.uR.setBelow(null,h)):(k.setAbove(g.usave,g.uL),
k.uL.setBelow(k,null),k.uR.setBelow(null,k)),k.usave=h.usave=null):g.vHigh==l.vHigh?(h.setAbove(null,g.uR),h.uR.setBelow(null,h),h.topLoc=PNLTRI.TRAP_LEFT,k.topLoc=PNLTRI.TRAP_RIGHT,k.setAbove(g.uL,null)):(m&&(h.setAbove(g.uR,null),h.uL.setBelow(h,h.uL.dR)),p&&k.setAbove(null,g.uL)):b();g.dL&&g.dR?f=d():(f=g.dL?g.dL:g.dR,c(f));k.rseg=h.lseg=a;g.vLow!=s.vLow?(t=k,u=h,g=f):g=null}a.is_inserted=!0},find_first_inside:function(){for(var a=0,b=this.trapArray.length;a<b;a++)if(this.inside_polygon(this.trapArray[a]))return this.trapArray[a];
return null}};PNLTRI.Trapezoider=function(a){this.polyData=a;this.queryStructure=new PNLTRI.QueryStructure(this.polyData)};
PNLTRI.Trapezoider.prototype={constructor:PNLTRI.Trapezoider,math_logstar_n:function(a){var b;for(b=0;1<=a;b++)a=PNLTRI.Math.log2(a);return b-1},math_NH:function(a,b){var c,d;c=0;for(d=a;c<b;c++)d=PNLTRI.Math.log2(d);return Math.ceil(1*a/d)},find_new_roots:function(a){a.is_inserted||(a.rootFrom=this.queryStructure.ptNode(a.vFrom,a.vTo,a.rootFrom),a.rootTo=this.queryStructure.ptNode(a.vTo,a.vFrom,a.rootTo))},trapezoide_polygon:function(){var a=this.queryStructure.segListArray.slice(0);PNLTRI.Math.array_shuffle(a);
var b,c,d=a.length,e=this.math_logstar_n(d);for(c=1;c<=e;c++){for(b=this.math_NH(d,c-1);b<this.math_NH(d,c);b++)this.queryStructure.add_segment(a[b-1]);for(b=0;b<d;b++)this.find_new_roots(a[b])}for(b=this.math_NH(d,e);b<=d;b++)this.queryStructure.add_segment(a[b-1]);return this.queryStructure.find_first_inside()}};PNLTRI.TRAP_NOSPLIT=-1;PNLTRI.MonoSplitter=function(a){this.polyData=a;this.startTrap=this.trapezoider=null};
PNLTRI.MonoSplitter.prototype={constructor:PNLTRI.MonoSplitter,monotonate_trapezoids:function(){this.trapezoider=new PNLTRI.Trapezoider(this.polyData);this.startTrap=this.trapezoider.trapezoide_polygon();this.polyData.initMonoChains();this.alyTrap(0,this.startTrap,null,null,null);return this.polyData.normalize_monotone_chains()},doSplit:function(a,b,c,d){return d?this.polyData.splitPolygonChain(a,b,c):this.polyData.splitPolygonChain(a,c,b)},alyTrap:function(a,b,c,d,e){function n(a){for(var b=a.length-
1;0<=b;b--)m.unshift(a[b])}var m=[],l=[];null==c&&(d=!0,b.uL?c=!0:b.dL?c=!1:(d=!1,c=b.uR?!0:!1));for(n([[b,c,d,a]]);l=m.shift();){var f;if((f=l[0])&&!f.monoDiag){if(!f.lseg||!f.rseg)return console.log("ERR alyTrap: lseg/rseg missing",f),f.monoDiag=PNLTRI.TRAP_NOSPLIT,m;a=l[1];b=l[2];var l=l[3],p;p=f.vHigh;var r=f.vLow,q=null,s,g;f.topLoc==PNLTRI.TRAP_MIDDLE&&(q=!0,s=f.uL,g=f.uR);f.botLoc==PNLTRI.TRAP_MIDDLE&&(q=!1,s=f.dL,g=f.dR);f.monoDiag=1+4*f.topLoc+f.botLoc;null!=q?f.topLoc==PNLTRI.TRAP_CUSP||
f.botLoc==PNLTRI.TRAP_CUSP?(p=this.doSplit(l,r,p,b),n([[b?s:g,!a,b,l],[b?g:s,!a,!b,p]])):f.topLoc==PNLTRI.TRAP_MIDDLE&&f.botLoc==PNLTRI.TRAP_MIDDLE?(p=this.doSplit(l,r,p,b),b||(a=p,p=l,l=a),n([[f.uL,!1,!0,l],[f.dL,!0,!0,l],[f.uR,!1,!1,p],[f.dR,!0,!1,p]])):(q?(c=f.dL?f.dL:f.dR,d=f.botLoc==PNLTRI.TRAP_LEFT):(c=f.uL?f.uL:f.uR,d=f.topLoc==PNLTRI.TRAP_LEFT),a==q&&b==d?l=this.doSplit(l,r,p,d):(p=this.doSplit(l,r,p,!d),n([[d?s:g,!q,d,p]])),n([[d?g:s,!q,!d,l],[c,q,!d,l]])):(f.topLoc==PNLTRI.TRAP_CUSP||f.botLoc==
PNLTRI.TRAP_CUSP?f.monoDiag=PNLTRI.TRAP_NOSPLIT:(f.topLoc==f.botLoc?f.monoDiag=PNLTRI.TRAP_NOSPLIT:l=f.topLoc==PNLTRI.TRAP_LEFT?this.doSplit(l,r,p,!a):this.doSplit(l,r,p,a),a=!a),a?(c=f.uL?f.uL:f.uR,d=f.topLoc==PNLTRI.TRAP_LEFT):(c=f.dL?f.dL:f.dR,d=f.botLoc==PNLTRI.TRAP_LEFT),n([[c,!a,!d,l]]))}if(e)return m}return[]}};PNLTRI.MonoTriangulator=function(a){this.polyData=a};
PNLTRI.MonoTriangulator.prototype={constructor:PNLTRI.MonoTriangulator,triangulate_all_polygons:function(){var a=this.polyData.getMonoSubPolys();this.polyData.clearTriangles();for(var b=0;b<a.length;b++){var c=a[b],d=c.mprev,e=c.mnext;e.mnext==d?this.polyData.addTriangle(c.vFrom,e.vFrom,d.vFrom):this.triangulate_single_polygon(c)}},triangulate_single_polygon:function(a){var b=a.mnext;a=a.vFrom;for(var c=[b.vFrom],d=0,b=b.mnext,e=b.vFrom;e!=a||1<d;)if(0<d)if(0<PNLTRI.Math.ptsCrossProd(e,c[d-1],c[d]))this.polyData.addTriangle(c[d-
1],c[d],e),d--;else if(c[++d]=e,e==a)for(console.log("ERR uni-y-monotone: only concave angles left",c);1<d;)d--,this.polyData.addTriangle(c[d-1],c[d],c[d+1]);else b=b.mnext,e=b.vFrom;else c[++d]=e,b=b.mnext,e=b.vFrom;this.polyData.addTriangle(c[d-1],c[d],e)}};PNLTRI.Triangulator=function(){this.lastPolyData=null};PNLTRI.Triangulator.prototype={constructor:PNLTRI.Triangulator,triangulate_polygon:function(a){if(!a||0==a.length)return[];a=new PNLTRI.PolygonData(a);(new PNLTRI.MonoSplitter(a)).monotonate_trapezoids();(new PNLTRI.MonoTriangulator(a)).triangulate_all_polygons();this.lastPolyData=a;return a.getTriangles()}};
