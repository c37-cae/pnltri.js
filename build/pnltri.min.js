// pnltri.js / raw.github.com/jahting/pnltri.js/master/LICENSE
'use strict';var PNLTRI={REVISION:"0.8"};PNLTRI.Math={log2:function(a){return Math.log(a)/Math.LN2},random:Math.random,array_shuffle:function(a){for(var b=a.length-1;0<b;b--){var c=Math.floor(PNLTRI.Math.random()*(b+1)),d=a[b];a[b]=a[c];a[c]=d}return a},ptsCrossProd:function(a,b,c){return(b.x-a.x)*(c.y-a.y)-(b.y-a.y)*(c.x-a.x)}};PNLTRI.Math.EPSILON_P=Math.pow(2,-43);PNLTRI.Math.EPSILON_N=-PNLTRI.Math.EPSILON_P;PNLTRI.PolygonData=function(a){this.vertices=[];this.segments=[];this.monoSubPolyChains=[];this.triangles=[];if(a){this.addPolygonChain(a[0],!1);for(var b=1,c=a.length;b<c;b++)this.addPolygonChain(a[b],!0)}};
PNLTRI.PolygonData.prototype={constructor:PNLTRI.PolygonData,getSegments:function(){return this.segments},getMonoSubPolys:function(){return this.monoSubPolyChains},getTriangles:function(){return this.triangles.concat()},compare_pts_yx:function(a,b){var c=a.y-b.y;if(c>PNLTRI.Math.EPSILON_P)return 1;if(c<PNLTRI.Math.EPSILON_N)return-1;c=a.x-b.x;return c>PNLTRI.Math.EPSILON_P?1:c<PNLTRI.Math.EPSILON_N?-1:0},polygon_area:function(a){for(var b=a.length,c=0,d=b-1,e=0;e<b;d=e++)c+=a[d].x*a[e].y-a[e].x*a[d].y;
return 0.5*c},appendVertexEntry:function(a){a=a?a:{x:null,y:null,outSegs:[]};a.id=this.vertices.length;this.vertices.push(a);return a},createSegmentEntry:function(a,b){return{vFrom:a,vTo:b,upward:1==this.compare_pts_yx(b,a),sprev:null,snext:null}},appendSegmentEntry:function(a){this.segments.push(a);0==this.monoSubPolyChains.length&&(this.monoSubPolyChains=[this.segments[0]]);return a},addVertexChain:function(a,b){function c(a,b){return Math.abs(a.x-b.x)<PNLTRI.Math.EPSILON_P&&Math.abs(a.y-b.y)<PNLTRI.Math.EPSILON_P}
var d=!1;null!=b&&(d=0>this.polygon_area(a),d=b!=d);for(var e=[],k,g,h,n=0;n<a.length;n++)k=this.appendVertexEntry({x:a[n].x,y:a[n].y}),g=!0,h=e.length-1,0<=h&&c(k,e[h])&&(g=!1),g&&e.push(k);1<e.length&&c(e[e.length-1],e[0])&&e.pop();d&&(e=e.reverse());return e},addPolygonChain:function(a,b){var c=this.addVertexChain(a,b);if(3>c.length)return console.log("Polygon has < 3 vertices!",c),0;for(var d=this.segments.length,e,k,g,h=0;h<c.length-1;h++)e=this.createSegmentEntry(c[h],c[h+1]),g?(e.sprev=g,g.snext=
e):k=e,g=e,this.appendSegmentEntry(e);e=this.createSegmentEntry(c[c.length-1],c[0]);e.sprev=g;g.snext=e;this.appendSegmentEntry(e);k.sprev=e;e.snext=k;return this.segments.length-d},initMonoChains:function(){for(var a=0;a<this.segments.length;a++)this.segments[a].marked=!1,this.segments[a].mprev=this.segments[a].sprev,this.segments[a].mnext=this.segments[a].snext,this.segments[a].vFrom.outSegs=[{segOut:this.segments[a],vertTo:this.segments[a].vTo}]},appendVertexOutsegEntry:function(a,b){var c=b?b:
{segOut:null,vertTo:null};a.outSegs.push(c);return c},splitPolygonChain:function(a,b,c){function d(a,b){for(var c,d,e=null,g=4,h=0;h<a.outSegs.length;h++){c=a.outSegs[h];var k=c.vertTo;d=k.x-a.x;var k=k.y-a.y,r=b.x-a.x,u=b.y-a.y,v=(d*r+k*u)/Math.sqrt(d*d+k*k)/Math.sqrt(r*r+u*u);(d=0<=d*u-r*k?1-v:3+v)<g&&(g=d,e=c)}return e}var e=d(b,c),k=d(c,b),e=e.segOut,k=k.segOut,g=1==this.compare_pts_yx(b,c),h=this.appendSegmentEntry({vFrom:b,vTo:c,upward:!g,mprev:e.mprev,mnext:k}),g=this.appendSegmentEntry({vFrom:c,
vTo:b,upward:g,mprev:k.mprev,mnext:e});e.mprev.mnext=h;k.mprev.mnext=g;e.mprev=g;k.mprev=h;this.appendVertexOutsegEntry(b,{segOut:h,vertTo:c});this.appendVertexOutsegEntry(c,{segOut:g,vertTo:b});this.monoSubPolyChains[a]=k;this.monoSubPolyChains.push(e);return this.monoSubPolyChains.length-1},unique_monotone_chains_max:function(){var a,b,c,d,e,k;for(k=0;k<this.segments.length;k++)this.segments[k].marked=!1;var g=[];for(k=0;k<this.monoSubPolyChains.length;k++){a=b=this.monoSubPolyChains[k];d=e=a.vFrom;
a.marked=!0;a=a.mnext;for(var h=!1;(c=a.vFrom)!=d;){if(a.marked){h=!0;break}else a.marked=!0;1==this.compare_pts_yx(c,e)&&(e=c,b=a);a=a.mnext}h||g.push(b)}return g},normalize_monotone_chains:function(){this.monoSubPolyChains=this.unique_monotone_chains_max();return this.monoSubPolyChains.length},clearTriangles:function(){this.triangles=[]},addTriangle:function(a,b,c){this.triangles.push([a.id,b.id,c.id])}};PNLTRI.trapCnt=0;PNLTRI.Trapezoid=function(a,b,c,d){this.trapID=PNLTRI.trapCnt++;this.vHigh=a?a:{x:Number.POSITIVE_INFINITY,y:Number.POSITIVE_INFINITY};this.vLow=b?b:{x:Number.NEGATIVE_INFINITY,y:Number.NEGATIVE_INFINITY};this.lseg=c;this.rseg=d;this.depth=-1;this.monoDiag=null};
PNLTRI.Trapezoid.prototype={constructor:PNLTRI.Trapezoid,clone:function(){var a=new PNLTRI.Trapezoid(this.vHigh,this.vLow,this.lseg,this.rseg);a.uL=this.uL;a.uR=this.uR;a.dL=this.dL;a.dR=this.dR;a.sink=this.sink;return a},setAbove:function(a,b){this.uL=a;this.uR=b},setBelow:function(a,b){this.dL=a;this.dR=b},splitOffLower:function(a){var b=this.clone();this.vLow=b.vHigh=a;this.setBelow(b,null);b.setAbove(this,null);b.dL&&(b.dL.uL=b);b.dR&&(b.dR.uR=b);return b}};PNLTRI.T_Y=1;PNLTRI.T_X=2;
PNLTRI.T_SINK=3;PNLTRI.S_LEFT=1;PNLTRI.S_RIGHT=2;PNLTRI.QsNode=function(a){this.nodetype=PNLTRI.T_SINK;this.trap=a;a.sink=this};PNLTRI.QsNode.prototype={constructor:PNLTRI.QsNode};
PNLTRI.QueryStructure=function(a){PNLTRI.trapCnt=0;var b=new PNLTRI.Trapezoid(null,null,null,null);this.root=new PNLTRI.QsNode(b);this.trapArray=[b];this.segListArray=null;if(a){this.segListArray=a.getSegments();for(b=0;b<this.segListArray.length;b++)this.segListArray[b].rootFrom=this.segListArray[b].rootTo=this.root,this.segListArray[b].is_inserted=!1;this.compare_pts_yx=a.compare_pts_yx}else this.compare_pts_yx=PNLTRI.PolygonData.prototype.compare_pts_yx};
PNLTRI.QueryStructure.prototype={constructor:PNLTRI.QueryStructure,getRoot:function(){return this.root},getSegListArray:function(){return this.segListArray},cloneTrap:function(a){a=a.clone();this.trapArray.push(a);return a},splitNodeAtPoint:function(a,b,c){var d=a.trap;if(d.vHigh==b||d.vLow==b)return a;var e=d.splitOffLower(b);this.trapArray.push(e);a.nodetype=PNLTRI.T_Y;a.yval=b;a.trap=null;a.right=new PNLTRI.QsNode(d);a.left=new PNLTRI.QsNode(e);return c?d.sink:e.sink},fpEqual:function(a,b){return Math.abs(a-
b)<PNLTRI.Math.EPSILON_P},is_left_of:function(a,b,c){c=a.vFrom.x-b.x;var d=a.vTo.x-b.x;if(Math.abs(a.vTo.y-b.y)<PNLTRI.Math.EPSILON_P)a=d,b=c;else if(Math.abs(a.vFrom.y-b.y)<PNLTRI.Math.EPSILON_P)a=c,b=d;else return a.upward?PNLTRI.Math.ptsCrossProd(a.vFrom,a.vTo,b):PNLTRI.Math.ptsCrossProd(a.vTo,a.vFrom,b);return Math.abs(a)<PNLTRI.Math.EPSILON_P?Math.abs(b)<PNLTRI.Math.EPSILON_P?0:b:a},ptNode:function(a,b,c){var d,e=!0;switch(c.nodetype){case PNLTRI.T_SINK:return c;case PNLTRI.T_Y:d=a;d==c.yval&&
(d=b);d=this.compare_pts_yx(d,c.yval);-1==d&&(e=!1);break;case PNLTRI.T_X:if(a==c.seg.vFrom||a==c.seg.vTo){if(this.fpEqual(a.y,b.y)){b.x<a.x&&(e=!1);break}else d=this.is_left_of(c.seg,b,!1),0<d?e=!1:0==d&&(e=a==c.seg.vFrom?!0:!1);break}else d=this.is_left_of(c.seg,a,!0),0<d?e=!1:0==d&&(e=!0);break;default:console.log("ptNode: undef. NodeType: ",c.nodetype)}return e?this.ptNode(a,b,c.right):this.ptNode(a,b,c.left)},add_segment:function(a){function b(){var a=f.uL||f.uR;a.dL&&a.dR?f==a.dR?(m.setAbove(null,
null),l.setAbove(null,a),a.setBelow(a.dL,l)):(l.setAbove(null,null),m.setAbove(a,null),a.setBelow(m,a.dR)):(m.setAbove(a,null),l.setAbove(null,a),a.setBelow(m,l))}function c(a){f.vLow==s.vLow&&q?f.dL?(m.setBelow(a,null),l.setBelow(null,null),a.setAbove(m,a.uR)):(l.setBelow(null,a),m.setBelow(null,null),a.setAbove(a.uL,l)):(a.uL&&a.uR?a.uL==f?(a.usave=a.uR,a.uside=PNLTRI.S_LEFT,m.setBelow(a,null),l.setBelow(a,null)):(a.usave=a.uL,a.uside=PNLTRI.S_RIGHT,m.setBelow(null,a),l.setBelow(null,a)):f.vLow==
s.vLow?(m.setBelow(a,null),l.setBelow(null,a)):(m.setBelow(null,a),l.setBelow(a,null)),a.setAbove(m,l))}function d(){var b;f.vLow==s.vLow&&q?(f.dL.setAbove(m,null),f.dR.setAbove(null,l),b=f.dR,m.setBelow(f.dL,null),l.setBelow(null,b),b=null):0<e.is_left_of(a,f.vLow,!0)?(b=f.dR,f.dL.setAbove(m,null),f.dR.setAbove(m,l),m.setBelow(f.dL,f.dR),l.setBelow(null,f.dR)):(b=f.dL,f.dL.setAbove(m,l),f.dR.setAbove(null,l),l.setBelow(f.dL,f.dR),m.setBelow(f.dL,null));return b}var e=this,k,g,h,n,p,q;a.upward?(n=
a.vFrom,k=a.vTo,p=a.rootFrom,g=a.rootTo,q=a.sprev.is_inserted,h=a.snext.is_inserted):(n=a.vTo,k=a.vFrom,p=a.rootTo,g=a.rootFrom,q=a.snext.is_inserted,h=a.sprev.is_inserted);g=this.ptNode(k,n,g);h||(g=this.splitNodeAtPoint(g,k,!1));h=g.trap;if(h.uL||h.uR){g=this.ptNode(n,k,p);q||(g=this.splitNodeAtPoint(g,n,!0));var s=g.trap,f=h,m,l,t,r;for(k=this.trapArray.length+2;f;){if(0>--k){console.log("ERR add_segment: infinite loop",f,a,this);return}if(!f.dL&&!f.dR){console.log("ERR add_segment: missing successors",
f,a,this);return}g=f.sink;g.nodetype=PNLTRI.T_X;g.seg=a;g.trap=null;n=p=!0;r&&r.rseg==f.rseg?(p=!1,m=f,l=r,l.vLow=f.vLow,g.right=r.sink,g.left=new PNLTRI.QsNode(m)):t&&t.lseg==f.lseg?(n=!1,l=f,m=t,m.vLow=f.vLow,g.left=t.sink,g.right=new PNLTRI.QsNode(l)):(m=f,l=this.cloneTrap(f),g.right=new PNLTRI.QsNode(l),g.left=new PNLTRI.QsNode(m));f.uL&&f.uR?f.usave?(f.uside==PNLTRI.S_LEFT?(l.setAbove(f.uR,f.usave),l.uL.setBelow(l,null),l.uR.setBelow(null,l)):(m.setAbove(f.usave,f.uL),m.uL.setBelow(m,null),m.uR.setBelow(null,
m)),m.usave=l.usave=null):f.vHigh==h.vHigh?(l.setAbove(null,f.uR),l.uR.setBelow(null,l),m.setAbove(f.uL,null)):(p&&(l.setAbove(f.uR,null),l.uL.setBelow(l,l.uL.dR)),n&&m.setAbove(null,f.uL)):b();f.dL&&f.dR?n=d():(n=f.dL?f.dL:f.dR,c(n));m.rseg&&(m.rseg.trLeft=l);l.lseg&&(l.lseg.trRight=m);m.rseg=l.lseg=a;a.trLeft=m;a.trRight=l;f.vLow!=s.vLow?(t=m,r=l,f=n):f=null}a.is_inserted=!0}else console.log("ERR add_segment: missing trFirst.uX: ",h)},assignDepths:function(){function a(b,d){if(b&&-1==b.depth){b.depth=
d;var e;(e=b.lseg)&&-1==e.trLeft.depth&&c.push(e.trLeft);(e=b.rseg)&&-1==e.trRight.depth&&c.push(e.trRight);a(b.uL,d);a(b.uR,d);a(b.dL,d);a(b.dR,d)}}var b=[this.trapArray[0]],c=[],d,e=0;do{for(;d=b.shift();)a(d,e);b=c;c=[];e++}while(0<b.length)},reverse_polygon_chain:function(a){var b,c=a;do b=c.snext,c.snext=c.sprev,c.sprev=b,b=c.vTo,c.vTo=c.vFrom,c.vFrom=b,c.upward=!c.upward,c=c.sprev;while(c!=a)},normalize_segment_orientation:function(){for(var a,b=0;b<this.segListArray.length;b++)a=this.segListArray[b],
a.upward==(0==a.trLeft.depth%2)&&this.reverse_polygon_chain(a)},find_first_inside:function(){for(var a,b=0,c=this.trapArray.length;b<c;b++)if(a=this.trapArray[b],1==a.depth%2&&!a.monoDiag&&(!a.uL&&!a.uR||!a.dL&&!a.dR))return a;return null}};PNLTRI.Trapezoider=function(a){this.polyData=a;this.queryStructure=new PNLTRI.QueryStructure(this.polyData)};
PNLTRI.Trapezoider.prototype={constructor:PNLTRI.Trapezoider,find_first_inside:function(){return this.queryStructure.find_first_inside()},math_logstar_n:function(a){var b;for(b=0;1<=a;b++)a=PNLTRI.Math.log2(a);return b-1},math_NH:function(a,b){var c,d;c=0;for(d=a;c<b;c++)d=PNLTRI.Math.log2(d);return Math.ceil(1*a/d)},find_new_roots:function(a){a.is_inserted||(a.rootFrom=this.queryStructure.ptNode(a.vFrom,a.vTo,a.rootFrom),a.rootTo=this.queryStructure.ptNode(a.vTo,a.vFrom,a.rootTo))},trapezoide_polygon:function(){var a=
this.queryStructure,b=a.segListArray.slice(0);PNLTRI.Math.array_shuffle(b);var c,d,e=b.length,k=this.math_logstar_n(e);for(d=1;d<=k;d++){for(c=this.math_NH(e,d-1);c<this.math_NH(e,d);c++)a.add_segment(b[c-1]);for(c=0;c<e;c++)this.find_new_roots(b[c])}for(c=this.math_NH(e,k);c<=e;c++)a.add_segment(b[c-1]);a.assignDepths();a.normalize_segment_orientation()}};PNLTRI.MonoSplitter=function(a){this.polyData=a;this.startTrap=this.trapezoider=null};
PNLTRI.MonoSplitter.prototype={constructor:PNLTRI.MonoSplitter,monotonate_trapezoids:function(){this.trapezoider=new PNLTRI.Trapezoider(this.polyData);this.trapezoider.trapezoide_polygon();this.startTrap=this.trapezoider.find_first_inside();this.polyData.initMonoChains();for(var a=0,b=this.startTrap;b;)if(this.polyData.monoSubPolyChains[a]=b.lseg,this.alyTrap(a,b,null,null,null),b=this.trapezoider.find_first_inside())a=this.polyData.monoSubPolyChains.length;return this.polyData.normalize_monotone_chains()},
doSplit:function(a,b,c,d){return d?this.polyData.splitPolygonChain(a,b,c):this.polyData.splitPolygonChain(a,c,b)},alyTrap:function(a,b,c,d,e){function k(){var a;return(a=g.pop())?(h=a[0],n=a[1],p=a[2],q=a[3],!0):!1}var g=[],h,n,p,q,s;null==c&&(d=!0,b.uL?c=!0:b.dL?c=!1:(d=!1,c=b.uR?!0:!1));for(b&&g.push([b,c,d,a]);k();)if(!h.monoDiag){if(!h.lseg||!h.rseg)return console.log("ERR alyTrap: lseg/rseg missing",h),g;n?p?(a=h.uL,b=h.uR,c=h.dL,d=h.dR):(a=h.uR,b=h.uL,c=h.dR,d=h.dL):p?(a=h.dL,b=h.dR,c=h.uL,
d=h.uR):(a=h.dR,b=h.dL,c=h.uR,d=h.uL);if(b||d)s=this.doSplit(q,h.vLow,h.vHigh,p);d&&g.push([d,n,!p,s]);b&&g.push([b,!n,!p,s]);c&&g.push([c,n,p,q]);c||d||a&&g.push([a,!n,p,q]);h.monoDiag=!0;if(e)return g}return[]}};PNLTRI.MonoTriangulator=function(a){this.polyData=a};
PNLTRI.MonoTriangulator.prototype={constructor:PNLTRI.MonoTriangulator,triangulate_all_polygons:function(){var a=this.polyData.getMonoSubPolys();this.polyData.clearTriangles();for(var b=0;b<a.length;b++){var c=a[b],d=c.mprev,e=c.mnext;e.mnext==d?this.polyData.addTriangle(c.vFrom,e.vFrom,d.vFrom):this.triangulate_single_polygon(c)}},triangulate_single_polygon:function(a){var b=a.mnext;a=a.vFrom;var c=[b.vFrom],d=0,b=b.mnext,e=b.vFrom;if(e!=a){for(;e!=a||1<d;)if(0<d)if(0<PNLTRI.Math.ptsCrossProd(e,
c[d-1],c[d]))this.polyData.addTriangle(c[d-1],c[d],e),d--;else if(c[++d]=e,e==a)for(console.log("ERR uni-y-monotone: only concave angles left",c);1<d;)d--,this.polyData.addTriangle(c[d-1],c[d],c[d+1]);else b=b.mnext,e=b.vFrom;else c[++d]=e,b=b.mnext,e=b.vFrom;this.polyData.addTriangle(c[d-1],c[d],e)}}};PNLTRI.Triangulator=function(){this.lastPolyData=null};PNLTRI.Triangulator.prototype={constructor:PNLTRI.Triangulator,triangulate_polygon:function(a){if(!a||0==a.length)return[];a=new PNLTRI.PolygonData(a);(new PNLTRI.MonoSplitter(a)).monotonate_trapezoids();(new PNLTRI.MonoTriangulator(a)).triangulate_all_polygons();this.lastPolyData=a;return a.getTriangles()}};
